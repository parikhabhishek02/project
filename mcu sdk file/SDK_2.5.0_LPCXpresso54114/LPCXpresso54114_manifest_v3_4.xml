<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_LPCXpresso54114" name="LPCXpresso54114" brief="This is SDK version 2.5.0 manifest file. It describes the content of the LPCXpresso54114 and additional settings for tools that support SDK version 2.5.0" format_version="3.4" api_version="2.0.0" configuration="2f90392bbdf7efba090600c8d243b8bd" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.4.xsd">
  <!--Timestamp (UTC): 2019-02-22 04:53:04.030220-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <ksdk id="MCUXpresso250" name="MCUXpresso250" version="2.5.0"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M0SLAVE" name="Cortex-M0 acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="10.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="10.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="lpcxpresso54114" name="LPCXpresso54114" href="http://www.nxp.com/products/:OM13089" version="1.0.0" package="LPC54114J256BD64">
      <description>The LPCXpresso family of boards provides a powerful and flexible development system for NXP®'s Cortex-M MCUs</description>
      <image path="docs/images" type="image">
        <files mask="LPCXpresso54114.gif"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The LPCXpresso family of boards provides a powerful and flexible development system for NXP®'s Cortex-M MCUs. The LPCXpresso54114 board has been developed by NXP to enable evaluation of and prototyping with the LPC54110 family of MCUs and its low power features make it as easy as possible to get started with your project. LPCXpresso™ is a low-cost development platform available from NXP supporting NXP's ARM-based microcontrollers. The platform is comprised of a simplified Eclipse-based IDE and low-cost target boards which include an attached JTAG debugger. LPCXpresso is an end-to-end solution enabling embedded engineers to develop their applications from initial evaluation to final production.</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="lpcxpresso54114_dev_hid_mouse_freertos_static" name="dev_hid_mouse_freertos_static" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/freertos_static/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/freertos_static/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos_static.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator/freertos/cm4" type="xml">
            <files mask="dev_audio_generator_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom/freertos/cm4" type="xml">
            <files mask="dev_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm4" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc/freertos/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_audio_freertos" name="dev_composite_hid_audio_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_audio_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic/freertos/cm4" type="xml">
            <files mask="dev_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk/freertos/cm4" type="xml">
            <files mask="dev_msc_ramdisk_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera/freertos/cm4" type="xml">
            <files mask="dev_video_virtual_camera_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale/freertos/cm4" type="xml">
            <files mask="dev_phdc_weighscale_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator/bm/cm4" type="xml">
            <files mask="dev_audio_generator_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_audio_generator_lite/bm/cm4" type="xml">
            <files mask="dev_audio_generator_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_cdc_vcom_lite/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_audio_bm" name="dev_composite_hid_audio_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_audio_lite_bm" name="dev_composite_hid_audio_lite_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic/bm/cm4" type="xml">
            <files mask="dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_hid_generic_lite/bm/cm4" type="xml">
            <files mask="dev_hid_generic_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rom_dev_cdc_bm" name="rom_dev_cdc_bm" brief="The example shows how to use USBD ROM stack to create a virtual comm port. When the USB on J3 is connected to a PC, the host would recognize the USB connection as a new serial port." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_rom_device_cdc/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_rom_device_cdc/bm/cm4" type="xml">
            <files mask="rom_dev_cdc_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rom_dev_msc_ram_bm" name="rom_dev_msc_ram_bm" brief="The example shows how to use USBD ROM stack to create a RAM disk. When the USB on J3 is connected to a PC, the host would recognize the USB connection as a mass storage device. Note that the storage happens on the RAM and is not a persistent storage.." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_rom_device_msc_ram/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_rom_device_msc_ram/bm/cm4" type="xml">
            <files mask="rom_dev_msc_ram_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rom_dev_audio_bm" name="rom_dev_audio_bm" brief="The example shows how to use USBD ROM stack to create and USB AUDIO class device. This device supports 2 channel audio in (MIC/LINE_IN) and 2 channel audio out (SPEAKERS/HEADPHONE)." toolchain="mcuxpresso" category="usb_examples" path="boards/lpcxpresso54114/usb_examples/usb_rom_device_audio/bm/cm4">
          <external path="boards/lpcxpresso54114/usb_examples/usb_rom_device_audio/bm/cm4" type="xml">
            <files mask="rom_dev_audio_bm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/hello_world/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/hello_world/cm4" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_hello_world_virtual_com" name="hello_world_virtual_com" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/hello_world_virtual_com/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/hello_world_virtual_com/cm4" type="xml">
            <files mask="hello_world_virtual_com.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_hello_world_cm4" name="hello_world_cm4" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_hello_world_cm0plus" path="boards/lpcxpresso54114/multicore_examples/hello_world/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/hello_world/cm4" type="xml">
            <files mask="hello_world_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_multicore_manager_cm4" name="multicore_manager_cm4" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_multicore_manager_cm0plus" path="boards/lpcxpresso54114/multicore_examples/multicore_manager/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/multicore_manager/cm4" type="xml">
            <files mask="multicore_manager_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_low_power_cm4" name="low_power_cm4" brief="The multicore Low Power demo application demonstrates how to leverage the auxiliary core for periodicdata collection from sensors and passing the data to the primary core for further processing.The data from sensors is read with frequency of about 50Hz (every 20ms) by secondary core and storedinto a buffer. When the buffer contains 50 samples from sensors, the secondary core sends an interruptto the primary core to process the data. The primary core computes average values from temperature andpressure and then prints them with last values from other sensors to the console.The reading of data from sensors takes about 3ms, the rest of the time the cores are in deep sleepmode to reduce power consumption. In order to switch to deep sleep mode, the Power APIPOWER_EnterDeepSleep() is used and to wake it up the interrupt from uTick timer is used.When both cores can't go to the deep sleep mode (the primary core processes data or the secondary corereads data from the sensors), the core which has nothing to do goes to sleep mode by WFI. Also, whenthe primary core is switched to the sleep mode, the flash memory is powered down by Power APIPOWER_PowerDownFlash() and before waking up the primary core it is powered on by POWER_PowerUpFlash().The demo is based on:A. Fuks, &quot;Sensor-hub sweet-spot analysis for ultra-low-power always-on operation,&quot; 2015 Symposium on VLSI Circuits (VLSI Circuits), Kyoto, 2015, pp. C154-C155.doi: 10.1109/VLSIC.2015.7231247URL: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=7231247&amp;isnumber=7231231" toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_low_power_cm0plus" path="boards/lpcxpresso54114/multicore_examples/low_power/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/low_power/cm4" type="xml">
            <files mask="low_power_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_erpc_matrix_multiply_rpmsg_cm4" name="erpc_matrix_multiply_rpmsg_cm4" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_erpc_matrix_multiply_rpmsg_cm0plus" path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_erpc_matrix_multiply_rpmsg_rtos_cm4" name="erpc_matrix_multiply_rpmsg_rtos_cm4" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_erpc_matrix_multiply_rpmsg_rtos_cm0plus" path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rpmsg_lite_pingpong_cm4" name="rpmsg_lite_pingpong_cm4" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_rpmsg_lite_pingpong_cm0plus" path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rpmsg_lite_pingpong_rtos_cm4" name="rpmsg_lite_pingpong_rtos_cm4" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="mcuxpresso" category="multicore_examples" linked_projects="lpcxpresso54114_rpmsg_lite_pingpong_rtos_cm0plus" path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong_rtos/cm4">
          <external path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong_rtos/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="i2c_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_polling_b2b_transfer_master" name="i2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/polling_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="i2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_polling_b2b_transfer_slave" name="i2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/i2c" path="boards/lpcxpresso54114/driver_examples/i2c/polling_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2c/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="i2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_event/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_event/cm4" type="xml">
            <files mask="freertos_event.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_generic/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_generic/cm4" type="xml">
            <files mask="freertos_generic.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_hello/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_hello/cm4" type="xml">
            <files mask="freertos_hello.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_mutex/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_mutex/cm4" type="xml">
            <files mask="freertos_mutex.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_queue/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_queue/cm4" type="xml">
            <files mask="freertos_queue.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_sem/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_sem/cm4" type="xml">
            <files mask="freertos_sem.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer’s callback SwTimerCallback isperiodically executed and text “Tick.” is printed to terminal." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_swtimer/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_swtimer/cm4" type="xml">
            <files mask="freertos_swtimer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then&#10;it is waked up by expired time delay that using RTC module or occur any a hardware interrupt.&#10;&#10;" toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_tickless/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_tickless/cm4" type="xml">
            <files mask="freertos_tickless.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_spi" name="freertos_spi" brief="The freertos_spi example shows how to use SPI driver in FreeRTOS:In this example , one spi instance is used as SPI master with blocking and another spi instance is used as SPI slave.1. SPI master sends/receives data using task blocking calls to/from SPI slave. (SPI Slave uses interrupt to receive/sendthe data)" toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_spi/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_spi/cm4" type="xml">
            <files mask="freertos_spi.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_usart" name="freertos_usart" brief="The USART example for FreeRTOS demonstrates the possibility to use the USART driver in the RTOS.The example uses single instance of USART IP and writes string into, then reads back chars.After every 4B received, these are sent back on USART." toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_usart/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_usart/cm4" type="xml">
            <files mask="freertos_usart.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards/&lt;board&gt;/rtos_examples/freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="mcuxpresso" category="rtos_examples" path="boards/lpcxpresso54114/rtos_examples/freertos_i2c/cm4">
          <external path="boards/lpcxpresso54114/rtos_examples/freertos_i2c/cm4" type="xml">
            <files mask="freertos_i2c.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="mcuxpresso" category="driver_examples" path="boards/lpcxpresso54114/driver_examples/crc/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/crc/cm4" type="xml">
            <files mask="crc.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_interrupt_cm4" name="mailbox_interrupt_cm4" brief="The mailbox_interrupt example shows how to use mailbox to exchange message.In this example:The core 0(CM4) writes value to mailbox for Core 1(CM0+), it causes mailbox interrupton CM0+ side. CM0+ reads value from mailbox increments and writes it to mailbox registerfor CM4, it causes mailbox interrupt on CM4 side. CM4 reads value from mailbox incrementsand writes it to mailbox register for CM0 again." toolchain="mcuxpresso" category="driver_examples/mailbox" linked_projects="lpcxpresso54114_mailbox_interrupt_cm0plus" path="boards/lpcxpresso54114/driver_examples/mailbox/interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/mailbox/interrupt/cm4" type="xml">
            <files mask="mailbox_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_mutex_cm4" name="mailbox_mutex_cm4" brief="The mailbox_mutex example shows how to use mailbox mutex.In this example:The core 0 sends address of shared variable to core 1 by mailbox.Both cores trying to get mutex in while loop, after that updates shared variableand sets mutex, to allow access other core to shared variable." toolchain="mcuxpresso" category="driver_examples/mailbox" linked_projects="lpcxpresso54114_mailbox_mutex_cm0plus" path="boards/lpcxpresso54114/driver_examples/mailbox/mutex/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/mailbox/mutex/cm4" type="xml">
            <files mask="mailbox_mutex_cm4.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_iap_flash" name="iap_flash" brief="The IAP Flash project is a simple demonstration program of the SDK IAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="mcuxpresso" category="driver_examples" path="boards/lpcxpresso54114/driver_examples/iap/iap_flash/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/iap/iap_flash/cm4" type="xml">
            <files mask="iap_flash.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_flashiap" name="flashiap" brief="The FLASIAP project is a simple demonstration program of the SDK FLASIAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="mcuxpresso" category="driver_examples" path="boards/lpcxpresso54114/driver_examples/flashiap/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/flashiap/cm4" type="xml">
            <files mask="flashiap.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_fmeas" name="fmeas" brief="This example shows how to use SDK drivers to use the Frequency Measure feature of SYSCON module on LPC devices.It shows how to measure a target frequency using a (faster) reference frequency. The example uses the internal main clock as the reference frequency to measure the frequencies of the RTC, watchdog oscillator, and internal RC oscillator." toolchain="mcuxpresso" category="driver_examples" path="boards/lpcxpresso54114/driver_examples/fmeas/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/fmeas/cm4" type="xml">
            <files mask="fmeas.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="mcuxpresso" category="driver_examples/gpio" path="boards/lpcxpresso54114/driver_examples/gpio/led_output/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/gpio/led_output/cm4" type="xml">
            <files mask="gpio_led_output.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_flash" name="spi_polling_flash" brief="The spi_interrupt example shows how to communicate with mx25r flash using spi polling functional API." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/polling_flash/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/polling_flash/cm4" type="xml">
            <files mask="spi_polling_flash.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_flash" name="spi_interrupt_flash" brief="The spi_interrupt example shows how to communicate with mx25r flash using spi interrupt functional API." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt_flash/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt_flash/cm4" type="xml">
            <files mask="spi_interrupt_flash.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b/master/cm4" type="xml">
            <files mask="spi_interrupt_b2b_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt_b2b/slave/cm4" type="xml">
            <files mask="spi_interrupt_b2b_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt" name="spi_interrupt" brief="The spi_interrupt example shows how to use spi functional API to do interrupt transfer:In this example, one spi instance as master and another spi instance as slave. Master sends a piece of data to slave,and check if the data slave received is correct." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/interrupt/cm4" type="xml">
            <files mask="spi_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_polling" name="usart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/polling/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/polling/cm4" type="xml">
            <files mask="usart_polling.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt" name="usart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/interrupt/cm4" type="xml">
            <files mask="usart_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt_transfer" name="usart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/interrupt_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/interrupt_transfer/cm4" type="xml">
            <files mask="usart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt_rb_transfer" name="usart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/interrupt_rb_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/interrupt_rb_transfer/cm4" type="xml">
            <files mask="usart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" category="driver_examples/dma" path="boards/lpcxpresso54114/driver_examples/dma/memory_to_memory/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/dma/memory_to_memory/cm4" type="xml">
            <files mask="dma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_dma_transfer" name="usart_dma_transfer" brief="The usart_dma example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/dma_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/dma_transfer/cm4" type="xml">
            <files mask="usart_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_dma_double_buffer_transfer" name="usart_dma_double_buffer_transfer" brief="This example shows how to use the DMA driver to implement a double buffer receive scheme from the USARTThe example shows the double buffer constructed using two descriptors (g_pingpong_desc). These descriptors are cycled from one to the other.Things to note- The descriptors of the ping pong transfer need to be aligned to size 16- The inital transfer will perform the same job as first descriptor of ping pong, so the first linkeage is to go to g_pingpong_desc[1]- g_pingpong_desc[1] then chains the g_pingpong_desc[0] as the next descriptor- The properties are set up such that g_pingpong_desc[0] (and the initial configuration uses INTA to signal back to the callback)- g_pingpong_desc[1] uses INTB to signal to the callback- The scheduled callback uses this information to know which data was last writtenA note on PerformanceThe intent of this example is to illustrate how a double-buffer scheme can be implemented using the dma. The performance of this example will be limited to how quickly the echo printer can read-out the data from the ping pong buffer and display it. This means that the example will work well if characters are entered at a rate where the DMA callback to echo the string can keep up with the input stream. Connecting the USARTRX to a continuous fast speed will cause the DMA to fall behind. " toolchain="mcuxpresso" category="driver_examples/usart" path="boards/lpcxpresso54114/driver_examples/usart/dma_double_buffer_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/usart/dma_double_buffer_transfer/cm4" type="xml">
            <files mask="usart_dma_double_buffer_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rtc_example" name="rtc_example" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="mcuxpresso" category="driver_examples/rtc" path="boards/lpcxpresso54114/driver_examples/rtc/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/rtc/cm4" type="xml">
            <files mask="rtc_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_simple_pwm" name="sctimer_simple_pwm" brief="The SCTimer project is a simple demonstration program of the SDK SCTimer's driver capabiltiy to generate PWM signals." toolchain="mcuxpresso" category="driver_examples/sctimer" path="boards/lpcxpresso54114/driver_examples/sctimer/simple_pwm/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/sctimer/simple_pwm/cm4" type="xml">
            <files mask="sctimer_simple_pwm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_pwm_with_dutycyle_change" name="sctimer_pwm_with_dutycyle_change" brief="This SCTIMer project is a demonstration program of the SDK SCTimer driver's PWM generation. It sets up a PWM signaland periodically updates the PWM signals dutycycle." toolchain="mcuxpresso" category="driver_examples/sctimer" path="boards/lpcxpresso54114/driver_examples/sctimer/pwm_with_dutycyle_change/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/sctimer/pwm_with_dutycyle_change/cm4" type="xml">
            <files mask="sctimer_pwm_with_dutycyle_change.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_multi_state_pwm" name="sctimer_multi_state_pwm" brief="The SCTImer multi-state project is a demonstration program of the SCTimer state machine. It shows how to set up events to be triggered in a certain stateand transitioning between states.State 0 has 2 events that generate a PWM signal, it also has an event linked to an input signal to transition to State 1.State 1 has 4 events that generate 2 PWM signals, it also has an event linked to an input signal to transition to State 0." toolchain="mcuxpresso" category="driver_examples/sctimer" path="boards/lpcxpresso54114/driver_examples/sctimer/multi_state_pwm/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/sctimer/multi_state_pwm/cm4" type="xml">
            <files mask="sctimer_multi_state_pwm.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_16bit_counter" name="sctimer_16bit_counter" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="mcuxpresso" category="driver_examples/sctimer" path="boards/lpcxpresso54114/driver_examples/sctimer/16bit_counter/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/sctimer/16bit_counter/cm4" type="xml">
            <files mask="sctimer_16bit_counter.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_wwdt_example" name="wwdt_example" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="mcuxpresso" category="driver_examples/wwdt" path="boards/lpcxpresso54114/driver_examples/wwdt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/wwdt/cm4" type="xml">
            <files mask="wwdt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mcuxpresso" category="driver_examples/mrt" path="boards/lpcxpresso54114/driver_examples/mrt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/mrt/cm4" type="xml">
            <files mask="mrt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_basic" name="lpc_adc_basic" brief="The lpc_adc_basic example shows how to use LPC ADC driver in the simplest way.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the conversion sequence A's flag till the conversion is completed. When the conversion is completed, just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.  Program Flow1.This example demonstrates how to configure the A sequences with polling, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.    3.After ADC channels are assigned to each of the sequences, the software trigger is chosen. Setting   SEQA_CTRL_START to '1' will trigger sequence A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start. 5.Read the corresponding DATAVALID field with polling to judge whether the conversion completes and the result is ready.  If the result is ready, the example will printf result information to terminal." toolchain="mcuxpresso" category="driver_examples/adc" path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_basic/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_basic/cm4" type="xml">
            <files mask="lpc_adc_basic.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_interrupt" name="lpc_adc_interrupt" brief="The lpc_adc_interrupt example shows how to use interrupt with LPC ADC driver.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the flag variable which would be asserted when the conversion completed ISR is executed. Then just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    5.When the conversion completes, the interrupt would be triggered. The ISR will print conversion result to terminal." toolchain="mcuxpresso" category="driver_examples/adc" path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_interrupt/cm4" type="xml">
            <files mask="lpc_adc_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_burst" name="lpc_adc_burst" brief="The lpc_adc_burst example shows how to use LPC ADC driver with the burst mode.In this example, the internal temperature sensor is used to created the input analog signal.When user type in any key from the keyboard, the burst mode is enabled. Then the conversion sequence A would be started automatically, till the burst would be disabled in conversion completed ISR. Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above.       2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored. (In this example, we use this way.)         3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with burst mode, you can configure channel via   &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, burst mode will start.    5.When the first conversion completes, the interrupt would be triggered. The ISR will stop the burst mode and print conversion result   to terminal." toolchain="mcuxpresso" category="driver_examples/adc" path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_burst/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_burst/cm4" type="xml">
            <files mask="lpc_adc_burst.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_dma" name="lpc_adc_dma" brief="The lpc_adc_dma example shows how to use LPC ADC driver with DMA.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. When the ADC conversion is completed, it would trigger the DMA to move the ADC conversion result from ADC conversion data register to user indicated memory. Then the main loop waits for the transfer to be done and print the result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. How to use DMA to work with ADC?   The sequence-A or sequence-B conversion/sequence-complete interrupts may also be   used to generate a DMA trigger. To trigger a DMA transfer, the same conditions must be   met as the conditions for generating an interrupt.   Remark: If the DMA is used, the ADC interrupt must be disabled in the NVIC.   Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Configure the DMA and DMAMUX to work with ADC sequences.4.Enable the Conversion-Complete or Sequence-Complete DMA for sequences A.  5.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    6.When the conversion completes, the DMA would be requested.7.When the DMA transfer completes, DMA will trigger a interrupt. ISR would set the &quot;bDmaTransferDone&quot; to 'true'. Then main function will   print conversion result to terminal." toolchain="mcuxpresso" category="driver_examples/adc" path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_dma/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/adc/lpc_adc_dma/cm4" type="xml">
            <files mask="lpc_adc_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_pwm_example" name="ctimer_pwm_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="mcuxpresso" category="driver_examples/ctimer" path="boards/lpcxpresso54114/driver_examples/ctimer/simple_pwm/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/ctimer/simple_pwm/cm4" type="xml">
            <files mask="ctimer_pwm_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_pwm_interrupt_example" name="ctimer_pwm_interrupt_example" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="mcuxpresso" category="driver_examples/ctimer" path="boards/lpcxpresso54114/driver_examples/ctimer/simple_pwm_interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/ctimer/simple_pwm_interrupt/cm4" type="xml">
            <files mask="ctimer_pwm_interrupt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_match_example" name="ctimer_match_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="mcuxpresso" category="driver_examples/ctimer" path="boards/lpcxpresso54114/driver_examples/ctimer/simple_match/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/ctimer/simple_match/cm4" type="xml">
            <files mask="ctimer_match_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_match_interrupt_example" name="ctimer_match_interrupt_example" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="mcuxpresso" category="driver_examples/ctimer" path="boards/lpcxpresso54114/driver_examples/ctimer/simple_match_interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/ctimer/simple_match_interrupt/cm4" type="xml">
            <files mask="ctimer_match_interrupt_example.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_gint" name="gint" brief="This example shows how to use SDK drivers to use the Group GPIO input interrupt peripheral." toolchain="mcuxpresso" category="driver_examples" path="boards/lpcxpresso54114/driver_examples/gint/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/gint/cm4" type="xml">
            <files mask="gint.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_pint_pin_interrupt" name="pint_pin_interrupt" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="mcuxpresso" category="driver_examples/pint" path="boards/lpcxpresso54114/driver_examples/pint/pin_interrupt/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/pint/pin_interrupt/cm4" type="xml">
            <files mask="pint_pin_interrupt.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_pint_pattern_match" name="pint_pattern_match" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="mcuxpresso" category="driver_examples/pint" path="boards/lpcxpresso54114/driver_examples/pint/pattern_match/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/pint/pattern_match/cm4" type="xml">
            <files mask="pint_pattern_match.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_utick_wakeup" name="utick_wakeup" brief="The purpose of this demo is to show wakeup from deep sleep mode using MicroTick timer.The demo sets the MicroTick Timer as a wake up source and puts the device in deep-sleep mode. The MicroTick timer wakes up the device. " toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/utick_wakeup/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/utick_wakeup/cm4" type="xml">
            <files mask="utick_wakeup.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_interrupt_transfer" name="i2s_interrupt_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="mcuxpresso" category="driver_examples/i2s" path="boards/lpcxpresso54114/driver_examples/i2s/interrupt_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2s/interrupt_transfer/cm4" type="xml">
            <files mask="i2s_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_dma_transfer" name="i2s_dma_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="mcuxpresso" category="driver_examples/i2s" path="boards/lpcxpresso54114/driver_examples/i2s/dma_transfer/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/i2s/dma_transfer/cm4" type="xml">
            <files mask="i2s_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_i2s_codec" name="dmic_i2s_codec" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed into the I2S buffer. Last, it is read from the I2S buffer and sentto the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="mcuxpresso" category="driver_examples/dmic" path="boards/lpcxpresso54114/driver_examples/dmic/dmic_codec_direct/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/dmic/dmic_codec_direct/cm4" type="xml">
            <files mask="dmic_i2s_codec.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_i2s_dma" name="dmic_i2s_dma" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="mcuxpresso" category="driver_examples/dmic" path="boards/lpcxpresso54114/driver_examples/dmic/dmic_i2s_dma/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/dmic/dmic_i2s_dma/cm4" type="xml">
            <files mask="dmic_i2s_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_dma" name="dmic_dma" brief="This example shows how to use DMA to transfer data from DMIC to memory." toolchain="mcuxpresso" category="driver_examples/dmic" path="boards/lpcxpresso54114/driver_examples/dmic/dmic_dma/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/dmic/dmic_dma/cm4" type="xml">
            <files mask="dmic_dma.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_hwvad" name="dmic_hwvad" brief="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This demo explains how built in HWVAD( HW voice activity detector) in LPC5411x can be used towake up the device from sleep mode" toolchain="mcuxpresso" category="driver_examples/dmic" path="boards/lpcxpresso54114/driver_examples/dmic/dmic_hwvad/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/dmic/dmic_hwvad/cm4" type="xml">
            <files mask="dmic_hwvad.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/int_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/int_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_i2c_dma_b2b_transfer_master" name="cmsis_i2c_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/dma_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_i2c_dma_b2b_transfer_slave" name="cmsis_i2c_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/i2c" path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/dma_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/i2c/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_usart_interrupt_transfer" name="cmsis_usart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" category="cmsis_driver_examples/usart" path="boards/lpcxpresso54114/cmsis_driver_examples/usart/interrupt_transfer/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/usart/interrupt_transfer/cm4" type="xml">
            <files mask="cmsis_usart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_usart_dma_transfer" name="cmsis_usart_dma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" category="cmsis_driver_examples/usart" path="boards/lpcxpresso54114/cmsis_driver_examples/usart/dma_transfer/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/usart/dma_transfer/cm4" type="xml">
            <files mask="cmsis_usart_dma_transfer.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_power_manager_lpc" name="power_manager_lpc" brief="The power_manager_lpc application shows the usage of normal power mode control APIs for entering the three kinds oflow power mode: Sleep mode, Deep Sleep mode and Sleep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up byprepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions.     • Configure all pins as GPIO with pull-up resistor disabled in the IOCON block.     • Configure GPIO pins as outputs using the GPIO DIR register.     • Write 1 to the GPIO CLR register to drive the outputs LOW.     • All peripherals disabled." toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/power_manager_lpc/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/power_manager_lpc/cm4" type="xml">
            <files mask="power_manager_lpc.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/shell/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/shell/cm4" type="xml">
            <files mask="shell.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_polling_master" name="spi_half_duplex_polling_master" brief="The spi_half_duplex_polling_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the othere board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in polling way. " toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/master/cm4" type="xml">
            <files mask="spi_half_duplex_polling_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_polling_slave" name="spi_half_duplex_polling_slave" brief="The spi_half_duplex_polling_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/slave/cm4" type="xml">
            <files mask="spi_half_duplex_polling_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_int_master" name="spi_half_duplex_int_master" brief="The spi_half_duplex_int_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in interrupt way. " toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/master/cm4" type="xml">
            <files mask="spi_half_duplex_int_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_int_slave" name="spi_half_duplex_int_slave" brief="The spi_half_duplex_int_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/slave/cm4" type="xml">
            <files mask="spi_half_duplex_int_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_spi_int_b2b_transfer_master" name="cmsis_spi_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_master example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54114/cmsis_driver_examples/spi/int_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/spi/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_spi_int_b2b_transfer_slave" name="cmsis_spi_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_slave example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54114/cmsis_driver_examples/spi/int_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/spi/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_spi_dma_b2b_transfer_master" name="cmsis_spi_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_master example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54114/cmsis_driver_examples/spi/dma_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/spi/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_cmsis_spi_dma_b2b_transfer_slave" name="cmsis_spi_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_slave example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" category="cmsis_driver_examples/spi" path="boards/lpcxpresso54114/cmsis_driver_examples/spi/dma_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/cmsis_driver_examples/spi/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_dma_b2b_transfer_master" name="spi_dma_b2b_transfer_master" brief="The spi_dma_b2b_transfer_master example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from slave is correct. This example needs to work with spi_dma_b2b_transfer_slave example.Note: This example will run in master mode, please prepare another board for slave, and the slave       board should be started first.Project Information1.How to set the baudrate of SPI?  The baudrate of SPI is easy to set, just make sure the source clock of SPI." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/master/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_dma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_dma_b2b_transfer_slave" name="spi_dma_b2b_transfer_slave" brief="The spi_dma_b2b_transfer_slave example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from master is correct. This example needs to work with spi_dma_b2b_transfer_master example." toolchain="mcuxpresso" category="driver_examples/spi" path="boards/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/slave/cm4">
          <external path="boards/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_dma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="mcuxpresso" category="demo_apps" path="boards/lpcxpresso54114/demo_apps/led_blinky/cm4">
          <external path="boards/lpcxpresso54114/demo_apps/led_blinky/cm4" type="xml">
            <files mask="led_blinky.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_hello_world_cm0plus" name="hello_world_cm0plus" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/hello_world/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/hello_world/cm0plus" type="xml">
            <files mask="hello_world_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_multicore_manager_cm0plus" name="multicore_manager_cm0plus" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/multicore_manager/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/multicore_manager/cm0plus" type="xml">
            <files mask="multicore_manager_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_low_power_cm0plus" name="low_power_cm0plus" brief="The multicore Low Power demo application demonstrates how to leverage the auxiliary core for periodicdata collection from sensors and passing the data to the primary core for further processing.The data from sensors is read with frequency of about 50Hz (every 20ms) by secondary core and storedinto a buffer. When the buffer contains 50 samples from sensors, the secondary core sends an interruptto the primary core to process the data. The primary core computes average values from temperature andpressure and then prints them with last values from other sensors to the console.The reading of data from sensors takes about 3ms, the rest of the time the cores are in deep sleepmode to reduce power consumption. In order to switch to deep sleep mode, the Power APIPOWER_EnterDeepSleep() is used and to wake it up the interrupt from uTick timer is used.When both cores can't go to the deep sleep mode (the primary core processes data or the secondary corereads data from the sensors), the core which has nothing to do goes to sleep mode by WFI. Also, whenthe primary core is switched to the sleep mode, the flash memory is powered down by Power APIPOWER_PowerDownFlash() and before waking up the primary core it is powered on by POWER_PowerUpFlash().The demo is based on:A. Fuks, &quot;Sensor-hub sweet-spot analysis for ultra-low-power always-on operation,&quot; 2015 Symposium on VLSI Circuits (VLSI Circuits), Kyoto, 2015, pp. C154-C155.doi: 10.1109/VLSIC.2015.7231247URL: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=7231247&amp;isnumber=7231231" toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/low_power/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/low_power/cm0plus" type="xml">
            <files mask="low_power_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_erpc_matrix_multiply_rpmsg_cm0plus" name="erpc_matrix_multiply_rpmsg_cm0plus" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_erpc_matrix_multiply_rpmsg_rtos_cm0plus" name="erpc_matrix_multiply_rpmsg_rtos_cm0plus" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rpmsg_lite_pingpong_cm0plus" name="rpmsg_lite_pingpong_cm0plus" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rpmsg_lite_pingpong_rtos_cm0plus" name="rpmsg_lite_pingpong_rtos_cm0plus" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="mcuxpresso" category="multicore_examples" path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus">
          <external path="boards/lpcxpresso54114/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_interrupt_cm0plus" name="mailbox_interrupt_cm0plus" brief="The mailbox_interrupt example shows how to use mailbox to exchange message.In this example:The core 0(CM4) writes value to mailbox for Core 1(CM0+), it causes mailbox interrupton CM0+ side. CM0+ reads value from mailbox increments and writes it to mailbox registerfor CM4, it causes mailbox interrupt on CM4 side. CM4 reads value from mailbox incrementsand writes it to mailbox register for CM0 again." toolchain="mcuxpresso" category="driver_examples/mailbox" path="boards/lpcxpresso54114/driver_examples/mailbox/interrupt/cm0plus">
          <external path="boards/lpcxpresso54114/driver_examples/mailbox/interrupt/cm0plus" type="xml">
            <files mask="mailbox_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_mutex_cm0plus" name="mailbox_mutex_cm0plus" brief="The mailbox_mutex example shows how to use mailbox mutex.In this example:The core 0 sends address of shared variable to core 1 by mailbox.Both cores trying to get mutex in while loop, after that updates shared variableand sets mutex, to allow access other core to shared variable." toolchain="mcuxpresso" category="driver_examples/mailbox" path="boards/lpcxpresso54114/driver_examples/mailbox/mutex/cm0plus">
          <external path="boards/lpcxpresso54114/driver_examples/mailbox/mutex/cm0plus" type="xml">
            <files mask="mailbox_mutex_cm0plus.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="LPC54114J256" name="LPC54114" href="http://www.nxp.com/lpc" version="1.0.0" full_name="LPC54114J256">
      <description>The LPC5411x are ARM Cortex-M4 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The LPC5411x are ARM Cortex-M4 based microcontrollers for embedded applications. These devices include an ARM Cortex-M0+ coprocessor, up to 192 KB of on-chip SRAM, up to 256 KB on-chip flash, full-speed USB device interface with Crystal-less operation, a DMIC subsystem with PDM microphone interface and I2S, five general-purpose timers, one SCTimer/PWM, one RTC/alarm timer, one 24-bit Multi-Rate Timer (MRT), a Windowed Watchdog Timer (WWDT), eight flexible serial communication peripherals (each of which can be a USART, SPI, or I2C interface), and one 12-bit 5.0 Msamples/sec ADC, and a temperature sensor. The ARM Cortex-M4 is a 32-bit core that offers system enhancements such as low power consumption, enhanced debug features, and a high level of support block integration. The ARM Cortex-M4 CPU incorporates a 3-stage pipeline, uses a Harvard architecture with separate local instruction and data buses as well as a third bus for peripherals, and includes an internal prefetch unit that supports speculative branching. The ARM Cortex-M4 supports single-cycle digital signal processing and SIMD instructions. A hardware floating-point unit is integrated in the core. The ARM Cortex-M0+ coprocessor is an energy-efficient and easy-to-use 32-bit core which is code and tool-compatible with the Cortex-M4 core. The Cortex-M0+ coprocessor offers up to 100 MHz performance with a simple instruction set and reduced code size.</content>
          </specific>
        </metadata>
        <metadata key="vendor" value="NXP"/>
        <metadata key="vendor.device.type" value="LPC"/>
        <metadata key="vendor.device.family" value="LPC5411x"/>
      </metadataSet>
      <core id="cm4_LPC54114J256" name="cm4" fpu="true" type="cm4" boot_role="primary"/>
      <core id="cm0plus_LPC54114J256" name="cm0plus" fpu="false" type="cm0plus" slave_roles="M0SLAVE" boot_role="secondary"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_LPC54114J256" name="PROGRAM_FLASH" addr="00000000" size="00040000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM1_LPC54114J256" name="SRAM1" addr="20010000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM0_LPC54114J256" name="SRAM0" addr="20000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAMX_LPC54114J256" name="SRAMX" addr="04000000" size="00008000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM2_LPC54114J256" name="SRAM2" addr="20020000" size="00008000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="256" ram_size_kb="192"/>
      <package id="LPC54114J256BD64" name="LPC54114J256BD64"/>
      <package id="LPC54114J256UK49" name="LPC54114J256UK49"/>
      <evaluation_boards>
        <evaluation_board name="lpcxpresso54114"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.LPC54114J256" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.LPC54114J256" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.LPC54114J256" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.LPC54114J256" name="internal.has_swo" value="true"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_LPC54114J256">
              <driverBinary path="devices/LPC54114/mcuxpresso" type="binary">
                <files mask="LPC5411x_256K.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="RTE_Device.LPC54114" name="RTE_Device" version="1.0.0" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/LPC54114/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="platform.drivers.clock.LPC54114" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.LPC54114" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="LPC54114J256" user_visible="true" type="utilities"/>
    <component id="platform.drivers.fro_calib.LPC54114" name="fro_calib" brief="FRO calibration driver with calibration Lib" version="2.0.0" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_fro_calib.h"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libfro_calib_cm0.a"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_hardabi.a"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_softabi.a"/>
      </source>
    </component>
    <component id="platform.drivers.power.LPC54114" name="power" brief="Power driver with Power Lib Hard ABI" version="2.0.0" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libpower_cm0.a"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_hardabi.a"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="libs" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_softabi.a"/>
      </source>
    </component>
    <component id="platform.utilities.assert.LPC54114" name="assert" version="1.0.0" devices="LPC54114J256" dependency="component.serial_manager.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114 utility.debug_console.LPC54114" user_visible="true" type="utilities">
      <source path="devices/LPC54114/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="middleware.baremetal.LPC54114" name="baremetal" version="1.0.0" full_name="Baremetal" devices="LPC54114J256" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="tools.LPC54114" name="cmake_toolchain" version="1.0.0" devices="LPC54114J256" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="docs.images.LPC54114" name="images" version="1.0.0" devices="LPC54114J256" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="device.jpg"/>
        <files mask="LPCXpresso54114.gif"/>
      </source>
    </component>
    <component id="docs.LPC54114.LPC54114" name="LPC54114" version="1.0.0" devices="LPC54114J256" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes_LPC5411x.pdf"/>
      </source>
    </component>
    <component id="platform.Include_common.LPC54114" name="CMSIS_Include_common" version="5.1.1" devices="LPC54114J256" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm0plus.LPC54114" name="CMSIS_Include_core_cm0plus" version="5.1.1" devices="LPC54114J256" dependency="platform.Include_common.LPC54114" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm0plus.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm4.LPC54114" name="CMSIS_Include_core_cm4" version="5.1.1" devices="LPC54114J256" dependency="platform.Include_common.LPC54114" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.LPC54114" name="CMSIS" version="5.1.1" devices="LPC54114J256" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54114 platform.Include_common.LPC54114" user_visible="true" type="CMSIS">
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="core_cm0plus.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm3.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="core_cm33.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm0.h"/>
        <files mask="arm_math.h"/>
        <files mask="core_sc300.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="tz_context.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="core_cm7.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="core_sc000.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="5.1.1" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_SAI.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" name="Common" version="5.1.1" devices="LPC54114J256" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54114" name="CAN" version="1.2.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114" name="Ethernet" version="2.1.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54114" name="Ethernet_MAC" version="2.1.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54114" name="Ethernet_PHY" version="2.1.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54114" name="Flash" version="2.1.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114" name="I2C" version="2.3.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54114" name="MCI" version="2.3.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54114" name="NAND" version="2.3.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54114" name="SAI" version="1.1.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54114" name="SPI" version="2.2.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54114" name="USART" version="2.3.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114" name="USB" version="2.2.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54114" name="USB_Device" version="2.2.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54114" name="USB_Host" version="2.2.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="driver.wm8904.LPC54114" name="wm8904" version="1.0.0" devices="LPC54114J256" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/wm8904" target_path="codec" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source path="components/codec/wm8904" target_path="codec" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
    </component>
    <component id="middleware.template_application.freertos.LPC54114" name="freertos" brief="FreeRTOS template application" version="10.0.1" full_name="FreeRTOS template" devices="LPC54114J256" dependency="middleware.freertos.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="project_template">
      <source path="rtos/template_application/ARM_CM0" target_path="source" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source path="rtos/template_application/ARM_CM4F" target_path="source" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.freertos.LPC54114" name="Amazon-FreeRTOS" brief="Amazon FreeRTOS, Real Time Operating System" version="10.0.1" full_name="Amazon-FreeRTOS Kernel" devices="LPC54114J256" dependency="middleware.template_application.freertos.LPC54114" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos/license" type="other">
        <files mask="LICENSE"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/include" type="c_include">
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/include" type="c_include">
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS" target_path="amazon-freertos/FreeRTOS" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable" target_path="amazon-freertos/FreeRTOS/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM0" target_path="amazon-freertos/FreeRTOS/portable" type="src" device_cores="cm0plus_LPC54114J256">
        <files mask="fsl_tickless_systick.c"/>
        <files mask="port.c"/>
      </source>
      <source toolchain="mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM0" target_path="amazon-freertos/FreeRTOS/portable" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="fsl_tickless_generic.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/FreeRTOS/portable" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="fsl_tickless_generic.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/FreeRTOS/portable" type="src" device_cores="cm4_LPC54114J256">
        <files mask="fsl_tickless_systick.c"/>
        <files mask="port.c"/>
      </source>
    </component>
    <component id="middleware.freertos.heap.heap_1.LPC54114" name="heap_1" brief="FreeRTOS heap_1 allocator" version="10.0.1" full_name="FreeRTOS_heap_1" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos.heap.heap_2.LPC54114" name="heap_2" brief="FreeRTOS heap_2 allocator" version="10.0.1" full_name="FreeRTOS_heap_2" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos.heap.heap_3.LPC54114" name="heap_3" brief="FreeRTOS heap_3 allocator" version="10.0.1" full_name="FreeRTOS_heap_3" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.utilities.misc_utilities.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.freertos.heap.heap_4.LPC54114" name="heap_4" brief="FreeRTOS heap_4 allocator" version="10.0.1" full_name="FreeRTOS_heap_4" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.freertos.heap.heap_5.LPC54114" name="heap_5" brief="FreeRTOS heap_5 allocator" version="10.0.1" full_name="FreeRTOS_heap_5" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/FreeRTOS/portable" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos.freertos_tickless_lpc_rtc.LPC54114" name="freertos_tickless_lpc_rtc" brief="FreeRTOS lpc_rtc tickless" version="10.0.1" full_name="FreeRTOS_lpc_rtc_tickless" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.lpc_rtc.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/low_power_tickless" target_path="amazon-freertos/FreeRTOS/portable" type="src" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256">
        <files mask="fsl_tickless_rtc.c"/>
      </source>
    </component>
    <component id="middleware.usb.host_config_template.LPC54114" name="USB host config template" brief="USB host config template" version="2.1.0" full_name="USB host config template" devices="LPC54114J256" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_stack.LPC54114" name="USB host" brief="USB host stack" version="2.1.0" full_name="USB host stack" devices="LPC54114J256" dependency="middleware.usb.host_config_template.LPC54114 middleware.usb.stack_common.LPC54114" user_visible="true" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
        <files mask="usb_host_cdc.c"/>
        <files mask="usb_host_hid.c"/>
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
        <files mask="usb_host_phdc.c"/>
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
        <files mask="usb_host_cdc.h"/>
        <files mask="usb_host_hid.h"/>
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
        <files mask="usb_host_msd.h"/>
        <files mask="usb_host_phdc.h"/>
        <files mask="usb_host_printer.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_ehci.h"/>
        <files mask="usb_host_khci.h"/>
        <files mask="usb_host_ohci.h"/>
        <files mask="usb_host_ip3516hs.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_ehci.c"/>
        <files mask="usb_host_khci.c"/>
        <files mask="usb_host_ohci.c"/>
        <files mask="usb_host_ip3516hs.c"/>
      </source>
    </component>
    <component id="middleware.usb.device.LPC54114" name="common driver" version="1.0.0" full_name="USB stack" devices="LPC54114J256" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_ip3511fs.LPC54114" name="ip3511fs driver(FS)" version="1.0.0" full_name="USB stack" devices="LPC54114J256" dependency="middleware.usb.device.LPC54114" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.freertos.LPC54114" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
      <source condition="middleware.freertos.LPC54114" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
    </component>
    <component id="middleware.usb.stack_common.LPC54114" name="USB common" brief="USB common" version="2.1.0" full_name="USB common" devices="LPC54114J256" user_visible="true" type="middleware">
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.freertos.LPC54114" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
      <source condition="middleware.freertos.LPC54114" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.LPC54114" name="USB device config template" brief="USB device config template" version="2.1.0" full_name="USB device config template" devices="LPC54114J256" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_stack.LPC54114" name="USB device" brief="USB device stack" version="2.1.0" full_name="USB device stack" devices="LPC54114J256" dependency="middleware.usb.device_config_template.LPC54114 middleware.usb.stack_common.LPC54114" user_visible="true" type="middleware">
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="src">
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_audio.c"/>
        <files mask="usb_device_ccid.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_cdc_rndis.c"/>
        <files mask="usb_device_hid.c"/>
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
        <files mask="usb_device_phdc.c"/>
        <files mask="usb_device_video.c"/>
        <files mask="usb_device_printer.c"/>
      </source>
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="c_include">
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_audio.h"/>
        <files mask="usb_device_ccid.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_cdc_rndis.h"/>
        <files mask="usb_device_hid.h"/>
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
        <files mask="usb_device_phdc.h"/>
        <files mask="usb_device_video.h"/>
        <files mask="usb_device_printer.h"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.LPC54114" name="notifier" version="1.0.0" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="utilities">
      <source path="devices/LPC54114/utilities" target_path="utilities/utilities" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source path="devices/LPC54114/utilities" target_path="utilities/utilities" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
    </component>
    <component id="utility.shell.LPC54114" name="shell" version="1.0.0" devices="LPC54114J256" dependency="component.lists.LPC54114 component.serial_manager.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114 utility.debug_console.LPC54114" user_visible="true" type="utilities">
      <source path="devices/LPC54114/utilities" target_path="utilities" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source path="devices/LPC54114/utilities" target_path="utilities" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
    </component>
    <component id="driver.mx25r_flash.LPC54114" name="mx25r_flash" version="1.0.0" devices="LPC54114J256" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/mx25r_flash" target_path="source" type="c_include">
        <files mask="mx25r_flash.h"/>
      </source>
      <source path="components/mx25r_flash" target_path="source" type="src">
        <files mask="mx25r_flash.c"/>
      </source>
    </component>
    <component id="driver.ili9341.LPC54114" name="ili9341" version="1.0.0" devices="LPC54114J256" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/ili9341" target_path="lcd" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source path="components/ili9341" target_path="lcd" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
    </component>
    <component id="driver.ft6x06.LPC54114" name="ft6x06" version="1.0.0" devices="LPC54114J256" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/ft6x06" target_path="touchpanel" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source path="components/ft6x06" target_path="touchpanel" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
    </component>
    <component id="component.usart_adapter.LPC54114" name="usart_adapter" version="1.0.0" full_name="usart_adapter" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="usart_adapter.c"/>
      </source>
    </component>
    <component id="component.lists.LPC54114" name="lists" version="1.0.0" devices="LPC54114J256" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
    </component>
    <component id="component.serial_manager.LPC54114" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="LPC54114J256" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.LPC54114" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_device_config.LPC54114" name="serial_manager_usb_cdc_device_config" version="1.0.0" devices="LPC54114J256" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="devices/LPC54114/utilities" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc.LPC54114" name="serial_manager_usb_cdc" version="1.0.0" devices="LPC54114J256" dependency="component.serial_manager_usb_cdc_device_config.LPC54114 middleware.usb.device.LPC54114" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb.h"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb.c"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="configuration">
        <files mask="fsl_ucwxp.inf"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="other">
        <files mask="cdc.cat"/>
      </source>
    </component>
    <component id="utility.debug_console.LPC54114" name="debug_console" version="1.0.0" devices="LPC54114J256" dependency="component.serial_manager.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="utilities">
      <source path="devices/LPC54114/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/LPC54114/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source path="devices/LPC54114/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/LPC54114/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.lpc5411x_bm.LPC54114" name="rpmsg_lite_lpc5411x_bm" brief="RPMsg-Lite_lpcxpresso54114_porting_layer" version="2.0.2" full_name="Remote Procedure Messaging Lite porting layer for lpcxpresso54114 board" devices="LPC54114J256" dependency="middleware.multicore.rpmsg_lite.LPC54114 middleware.multicore.rpmsg_lite.bm.LPC54114" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/lpc5411x" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/lpc5411x" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.lpc5411x_freertos.LPC54114" name="rpmsg_lite_lpc5411x_freertos" brief="RPMsg-Lite_lpcxpresso54114_porting_layer" version="2.0.2" full_name="Remote Procedure Messaging Lite porting layer for lpcxpresso54114 board" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.freertos.heap.heap_3.LPC54114 middleware.multicore.rpmsg_lite.LPC54114 middleware.multicore.rpmsg_lite.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.utilities.misc_utilities.LPC54114" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/lpc5411x" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/lpc5411x" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.lpc5411x.LPC54114" name="rpmsg_lite_bm_config" brief="RPMsg-Lite_bm_config" version="2.0.2" full_name="RPMsg-Lite BM configuration" devices="LPC54114J256" dependency="middleware.multicore.mcmgr.LPC54114 middleware.multicore.mcmgr.lpc54114.LPC54114 middleware.multicore.rpmsg_lite.LPC54114 middleware.multicore.rpmsg_lite.bm.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.mailbox.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.lpc5411x.LPC54114" name="rpmsg_lite_freertos_config" brief="RPMsg-Lite_freertos_config" version="2.0.2" full_name="RPMsg-Lite FreeRTOS configuration" devices="LPC54114J256" dependency="middleware.multicore.mcmgr.LPC54114 middleware.multicore.mcmgr.lpc54114.LPC54114 middleware.multicore.rpmsg_lite.LPC54114 middleware.multicore.rpmsg_lite.freertos.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.mailbox.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.LPC54114" name="rpmsg_lite" brief="RPMsg-Lite" version="2.0.2" full_name="Remote Procedure Messaging Lite library" devices="LPC54114J256" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/common" target_path="rpmsg_lite" type="src">
        <files mask="llist.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/virtio" target_path="rpmsg_lite" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite" target_path="rpmsg_lite" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="script">
        <files mask="group__config.js"/>
        <files mask="group__rpmsg__queue.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="modules.js"/>
        <files mask="group__rpmsg__lite.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtree.js"/>
        <files mask="dynsections.js"/>
        <files mask="group__rpmsg__ns.js"/>
        <files mask="resize.js"/>
        <files mask="jquery.js"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="image">
        <files mask="nav_g.png"/>
        <files mask="rpmsg_lite_send_receive.png"/>
        <files mask="rpmsg_lite_arch.png"/>
        <files mask="sync_on.png"/>
        <files mask="doxygen.png"/>
        <files mask="closed.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="bc_s.png"/>
        <files mask="tab_b.png"/>
        <files mask="doc.png"/>
        <files mask="open.png"/>
        <files mask="sync_off.png"/>
        <files mask="splitbar.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="arrowdown.png"/>
        <files mask="rpmsg_isoosi.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_h.png"/>
        <files mask="arrowright.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="doc">
        <files mask="doxygen.css"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="group__rpmsg__ns.html"/>
        <files mask="rpmsg__ns_8h_source.html"/>
        <files mask="navtree.css"/>
        <files mask="rpmsg__lite_8h_source.html"/>
        <files mask="group__config.html"/>
        <files mask="rpmsg__default__config_8h.html"/>
        <files mask="group__rpmsg__queue.html"/>
        <files mask="modules.html"/>
        <files mask="rpmsg__queue_8h_source.html"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html"/>
        <files mask="rpmsg__default__config_8h_source.html"/>
        <files mask="group__rpmsg__lite.html"/>
        <files mask="tabs.css"/>
        <files mask="index.html"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="doc">
        <files mask="all_3.html"/>
        <files mask="groups_0.html"/>
        <files mask="search.css"/>
        <files mask="variables_0.html"/>
        <files mask="typedefs_0.html"/>
        <files mask="all_6.html"/>
        <files mask="variables_5.html"/>
        <files mask="files_0.html"/>
        <files mask="classes_0.html"/>
        <files mask="variables_6.html"/>
        <files mask="all_0.html"/>
        <files mask="functions_0.html"/>
        <files mask="all_4.html"/>
        <files mask="variables_1.html"/>
        <files mask="all_7.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="variables_4.html"/>
        <files mask="all_2.html"/>
        <files mask="variables_2.html"/>
        <files mask="all_1.html"/>
        <files mask="variables_3.html"/>
        <files mask="variables_7.html"/>
        <files mask="all_5.html"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="script">
        <files mask="all_3.js"/>
        <files mask="variables_5.js"/>
        <files mask="variables_7.js"/>
        <files mask="variables_3.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="all_4.js"/>
        <files mask="all_0.js"/>
        <files mask="variables_2.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="all_5.js"/>
        <files mask="groups_0.js"/>
        <files mask="files_0.js"/>
        <files mask="all_7.js"/>
        <files mask="variables_4.js"/>
        <files mask="variables_0.js"/>
        <files mask="all_2.js"/>
        <files mask="all_1.js"/>
        <files mask="all_6.js"/>
        <files mask="functions_0.js"/>
        <files mask="variables_6.js"/>
        <files mask="variables_1.js"/>
        <files mask="classes_0.js"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="image">
        <files mask="search_r.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.LPC54114" name="rpmsg_lite_bm_env" brief="RPMsg-Lite_baremetal_env" version="2.0.2" full_name="RPMsg-Lite baremetal environment layer" devices="LPC54114J256" dependency="middleware.multicore.rpmsg_lite.LPC54114" category="Multicore/RPMsg-Lite BM" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/bm" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/bm" type="c_include">
        <files mask="rpmsg_env.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.LPC54114" name="rpmsg_lite_freertos_env" brief="RPMsg-Lite_freertos_env" version="2.0.2" full_name="RPMsg-Lite FreeRTOS environment layer" devices="LPC54114J256" dependency="middleware.multicore.rpmsg_lite.LPC54114" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/freertos" type="c_include">
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_queue.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
    </component>
    <component id="middleware.multicore.mcmgr.lpc54114.LPC54114" name="mcmgr_lpc54114" brief="MCMgr_lpcxpresso54114_porting_layer" version="4.0.2" full_name="Multicore Manager porting layer for lpcxpresso54114 board" devices="LPC54114J256" dependency="middleware.multicore.mcmgr.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.mailbox.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" category="Multicore/MCMgr" user_visible="true" type="middleware">
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="src">
        <files mask="mcmgr_internal_core_api_lpc54114.c"/>
      </source>
    </component>
    <component id="middleware.multicore.mcmgr.LPC54114" name="mcmgr" brief="MCMgr" version="4.0.2" full_name="Multicore Manager" devices="LPC54114J256" category="Multicore/MCMgr" user_visible="true" type="other">
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source path="middleware/multicore/mcmgr" target_path="mcmgr" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="image">
        <files mask="nav_g.png"/>
        <files mask="sync_on.png"/>
        <files mask="doxygen.png"/>
        <files mask="closed.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="bc_s.png"/>
        <files mask="tab_b.png"/>
        <files mask="doc.png"/>
        <files mask="open.png"/>
        <files mask="sync_off.png"/>
        <files mask="splitbar.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="arrowdown.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_h.png"/>
        <files mask="arrowright.png"/>
        <files mask="folderclosed.png"/>
        <files mask="mcsdk.png"/>
        <files mask="folderopen.png"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="doc">
        <files mask="doxygen.css"/>
        <files mask="group__mcmgr.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="navtree.css"/>
        <files mask="dir_68267d1309a1af8e8297ef4c3efbcdba.html"/>
        <files mask="mcmgr_8h_source.html"/>
        <files mask="modules.html"/>
        <files mask="tabs.css"/>
        <files mask="index.html"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="script">
        <files mask="navtreeindex0.js"/>
        <files mask="modules.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtree.js"/>
        <files mask="dynsections.js"/>
        <files mask="group__mcmgr.js"/>
        <files mask="resize.js"/>
        <files mask="jquery.js"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="doc">
        <files mask="groups_0.html"/>
        <files mask="search.css"/>
        <files mask="typedefs_0.html"/>
        <files mask="all_0.html"/>
        <files mask="functions_0.html"/>
        <files mask="enums_0.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="all_2.html"/>
        <files mask="all_1.html"/>
        <files mask="enums_1.html"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="script">
        <files mask="enums_1.js"/>
        <files mask="enums_0.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="all_0.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="groups_0.js"/>
        <files mask="all_2.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="all_1.js"/>
        <files mask="functions_0.js"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="image">
        <files mask="search_r.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.common.LPC54114" name="eRPC_common" brief="eRPC" version="1.7.0" full_name="Embedded Remote Procedure Call" devices="LPC54114J256" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_codec.h"/>
        <files mask="erpc_basic_codec.h"/>
        <files mask="erpc_transport.h"/>
        <files mask="erpc_message_buffer.h"/>
        <files mask="erpc_message_loggers.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_manually_constructed.h"/>
        <files mask="erpc_crc16.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_arbitrator.LPC54114" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.7.0" full_name="eRPC arbitrator" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_arbitrated_client_manager.h"/>
        <files mask="erpc_client_manager.h"/>
        <files mask="erpc_simple_server.h"/>
        <files mask="erpc_server.h"/>
        <files mask="erpc_transport_arbitrator.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_client.LPC54114" name="eRPC_client" brief="eRPC_client" version="1.7.0" full_name="eRPC client" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_server.LPC54114" name="eRPC_server" brief="eRPC_server" version="1.7.0" full_name="eRPC server" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_simple_server.h"/>
        <files mask="erpc_server.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_remote_c_wrapper.LPC54114" name="eRPC_rpmsg_tty_rtos_remote_c_wrapper" brief="eRPC_rpmsg_tty_rtos_remote_c_wrapper" version="1.7.0" full_name="eRPC RPMsg-Lite remote TTY RTOS C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_c_wrapper.LPC54114" name="eRPC_mu_c_wrapper" brief="eRPC_mu_c_wrapper" version="1.7.0" full_name="eRPC Messaging Unit C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mu.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_master_c_wrapper.LPC54114" name="eRPC_rpmsg_lite_master_c_wrapper" brief="eRPC_rpmsg_lite_master_c_wrapper" version="1.7.0" full_name="eRPC RPMsg-Lite master C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_remote_c_wrapper.LPC54114" name="eRPC_rpmsg_lite_remote_c_wrapper" brief="eRPC_rpmsg_lite_remote_c_wrapper" version="1.7.0" full_name="eRPC RPMsg-Lite remote C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_master_c_wrapper.LPC54114" name="eRPC_rpmsg_lite_rtos_master_c_wrapper" brief="eRPC_rpmsg_lite_rtos_master_c_wrapper" version="1.7.0" full_name="eRPC RPMsg-Lite RTOS master C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_remote_c_wrapper.LPC54114" name="eRPC_rpmsg_lite_rtos_remote_c_wrapper" brief="eRPC_rpmsg_lite_rtos_remote_c_wrapper" version="1.7.0" full_name="eRPC RPMsg-Lite RTOS remote C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_c_wrapper.LPC54114" name="eRPC_dspi_master_c_wrapper" brief="eRPC_dspi_master_c_wrapper" version="1.7.0" full_name="eRPC DSPI master C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_c_wrapper.LPC54114" name="eRPC_dspi_slave_c_wrapper" brief="eRPC_dspi_slave_c_wrapper" version="1.7.0" full_name="eRPC DSPI slave C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_c_wrapper.LPC54114" name="eRPC_spi_master_c_wrapper" brief="eRPC_spi_master_c_wrapper" version="1.7.0" full_name="eRPC SPI master C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_c_wrapper.LPC54114" name="eRPC_spi_slave_c_wrapper" brief="eRPC_spi_slave_c_wrapper" version="1.7.0" full_name="eRPC SPI slave C Wrapper" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.LPC54114" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.7.0" full_name="eRPC MU transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_rtos_transport.LPC54114" name="eRPC_mu_rtos_transport" brief="eRPC_mu_rtos_transport" version="1.7.0" full_name="eRPC MU RTOS transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport.LPC54114" name="eRPC_rpmsg_lite_transport" brief="eRPC_rpmsg_lite_transport" version="1.7.0" full_name="eRPC RPMsg-Lite transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_static_queue.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport.LPC54114" name="eRPC_rpmsg_lite_rtos_transport" brief="eRPC_rpmsg_lite_rtos_transport" version="1.7.0" full_name="eRPC RPMsg-Lite RTOS transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.LPC54114" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.7.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg_tty.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.LPC54114" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.7.0" full_name="eRPC UART CMSIS transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_uart_cmsis_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_uart_cmsis.cpp"/>
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.LPC54114" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.7.0" full_name="eRPC DSPI master transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_dspi_master_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.LPC54114" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.7.0" full_name="eRPC DSPI slave transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_dspi_slave_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.LPC54114" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.7.0" full_name="eRPC SPI master transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_spi_master_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.LPC54114" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.7.0" full_name="eRPC SPI slave transport layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_spi_slave_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_freertos.LPC54114" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.7.0" full_name="eRPC FreeRTOS port layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_stdlib.LPC54114" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.7.0" full_name="eRPC stdlib port layer" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.doc.LPC54114" name="eRPC_port_stdlib" brief="erpc_doc" version="1.7.0" full_name="eRPC doc" devices="LPC54114J256" dependency="middleware.multicore.erpc.common.LPC54114" category="Multicore/eRPC" user_visible="false" type="other">
      <source path="middleware/multicore/erpc/docs" target_path="erpc/doc" type="other">
        <files mask="erpcgen.md"/>
        <files mask="eRPC-infrastructure.md"/>
        <files mask="erpcsniffer.md"/>
        <files mask="eRPC-footprint.md"/>
        <files mask="Home.md"/>
        <files mask="IDL-Reference.md"/>
        <files mask="Porting-Guide.md"/>
        <files mask="Contributing.md"/>
        <files mask="Getting-Started.md"/>
        <files mask="_Sidebar.md"/>
      </source>
      <source path="middleware/multicore/erpc/docs/images" target_path="erpc/doc" type="image">
        <files mask="sendingReceivingParameterValue.png"/>
        <files mask="eRPCwith_erpc_server_run_function.png"/>
        <files mask="eRPCusing_erpc_server_poll_function.png"/>
        <files mask="eRPC_directory.png"/>
        <files mask="client_side_flowchart.png"/>
        <files mask="RPCblockDiagram.png"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.LPC54114" name="eRPC" brief="eRPC" version="1.7.0" full_name="Embedded Remote Procedure Call" devices="LPC54114J256" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc" target_path="erpc/aux" type="project">
        <files mask=".cproject"/>
        <files mask=".project"/>
      </source>
      <source path="middleware/multicore/erpc" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
        <files mask="README.md"/>
        <files mask="LICENSE"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="other">
        <files mask="erpc__transport__setup_8h__dep__incl.map"/>
        <files mask="graph_legend.md5"/>
        <files mask="erpc__framed__transport_8h__dep__incl.map"/>
        <files mask="erpc__server_8h__dep__incl.md5"/>
        <files mask="inherit_graph_14.md5"/>
        <files mask="erpc__threading_8h__dep__incl.map"/>
        <files mask="inherit_graph_16.svg"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.svg"/>
        <files mask="erpc__manually__constructed_8h__incl.svg"/>
        <files mask="erpc__transport__setup_8h__dep__incl.svg"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_transport__inherit__graph.svg"/>
        <files mask="erpc__serial__transport_8h__incl.md5"/>
        <files mask="inherit_graph_10.map"/>
        <files mask="classerpc_1_1_request_context__coll__graph.map"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.svg"/>
        <files mask="inherit_graph_7.map"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.map"/>
        <files mask="erpc__framed__transport_8h__incl.map"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.md5"/>
        <files mask="erpc__basic__codec_8h__incl.map"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.map"/>
        <files mask="group__uart__transport.svg"/>
        <files mask="erpc__message__buffer_8h__incl.md5"/>
        <files mask="group__setup.map"/>
        <files mask="erpc__codec_8h__dep__incl.map"/>
        <files mask="group__infra__codec.map"/>
        <files mask="erpc__threading_8h__incl.map"/>
        <files mask="group__infra__server.md5"/>
        <files mask="group__tcp__transport.svg"/>
        <files mask="inherit_graph_0.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.map"/>
        <files mask="group__infra__server.map"/>
        <files mask="inherit_graph_1.svg"/>
        <files mask="inherit_graph_1.map"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.svg"/>
        <files mask="group__itbp__transport.map"/>
        <files mask="erpc__mbf__setup_8h__incl.svg"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.map"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.svg"/>
        <files mask="inherit_graph_7.md5"/>
        <files mask="erpc__framed__transport_8h__dep__incl.md5"/>
        <files mask="group__tcp__transport.md5"/>
        <files mask="inherit_graph_11.map"/>
        <files mask="classerpc_1_1_codec__coll__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.svg"/>
        <files mask="inherit_graph_17.svg"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.map"/>
        <files mask="erpc__transport_8h__dep__incl.svg"/>
        <files mask="group__rpmsg__lite__transport.map"/>
        <files mask="erpc__dspi__master__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.svg"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.svg"/>
        <files mask="erpc__config_8h__dep__incl.map"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.md5"/>
        <files mask="erpc__tcp__transport_8h__incl.md5"/>
        <files mask="inherit_graph_18.svg"/>
        <files mask="erpc__mu__transport_8h__incl.md5"/>
        <files mask="inherit_graph_20.svg"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.md5"/>
        <files mask="erpc__static__queue_8h__dep__incl.md5"/>
        <files mask="erpc__mu__transport_8h__incl.svg"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.map"/>
        <files mask="erpc__serial__transport_8h__incl.svg"/>
        <files mask="group__transport__setup.svg"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.md5"/>
        <files mask="erpc__manually__constructed_8h__incl.md5"/>
        <files mask="inherit_graph_15.svg"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.map"/>
        <files mask="inherit_graph_8.map"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.map"/>
        <files mask="classerpc_1_1_server__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.md5"/>
        <files mask="group__infra__transport.md5"/>
        <files mask="group__spi__master__transport.md5"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.md5"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.map"/>
        <files mask="inherit_graph_0.svg"/>
        <files mask="erpc__server__setup_8h__incl.svg"/>
        <files mask="inherit_graph_19.svg"/>
        <files mask="erpc__spi__master__transport_8h__incl.svg"/>
        <files mask="group__dspi__slave__transport.svg"/>
        <files mask="erpc__client__manager_8h__dep__incl.map"/>
        <files mask="group__infra.svg"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.svg"/>
        <files mask="erpc__port_8h__incl.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.md5"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.svg"/>
        <files mask="erpc__message__loggers_8h__incl.svg"/>
        <files mask="erpc__server_8h__dep__incl.svg"/>
        <files mask="inherit_graph_9.svg"/>
        <files mask="group__spi__slave__transport.md5"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.map"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.svg"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.md5"/>
        <files mask="erpc__serial_8h__incl.map"/>
        <files mask="classerpc_1_1_server__inherit__graph.map"/>
        <files mask="erpc__crc16_8h__dep__incl.map"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.md5"/>
        <files mask="inherit_graph_5.svg"/>
        <files mask="inherit_graph_22.md5"/>
        <files mask="inherit_graph_9.map"/>
        <files mask="inherit_graph_2.md5"/>
        <files mask="erpc__crc16_8h__dep__incl.svg"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.svg"/>
        <files mask="inherit_graph_22.map"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.md5"/>
        <files mask="group__itbp__transport.md5"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.svg"/>
        <files mask="inherit_graph_17.map"/>
        <files mask="inherit_graph_1.md5"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.md5"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.map"/>
        <files mask="group__setup.md5"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.md5"/>
        <files mask="group__spi__slave__transport.map"/>
        <files mask="erpc__threading_8h__dep__incl.svg"/>
        <files mask="inherit_graph_5.md5"/>
        <files mask="erpc__config_8h__dep__incl.md5"/>
        <files mask="group__mu__transport.md5"/>
        <files mask="erpc__spi__slave__transport_8h__incl.map"/>
        <files mask="erpc__transport__arbitrator_8h__incl.md5"/>
        <files mask="inherit_graph_4.md5"/>
        <files mask="group__infra.md5"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.map"/>
        <files mask="group__rpmsg__tty__rtos__transport.svg"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.svg"/>
        <files mask="group__port__threads.md5"/>
        <files mask="erpc__port_8h__incl.map"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.svg"/>
        <files mask="erpc__simple__server_8h__incl.md5"/>
        <files mask="erpc__static__queue_8h__dep__incl.svg"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.map"/>
        <files mask="inherit_graph_19.map"/>
        <files mask="erpc__static__queue_8h__incl.md5"/>
        <files mask="group__mu__transport.svg"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.md5"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.svg"/>
        <files mask="erpc__message__buffer_8h__incl.map"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.md5"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.map"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.svg"/>
        <files mask="erpc__client__setup_8h__incl.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.svg"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.md5"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.md5"/>
        <files mask="group__rpmsg__lite__transport.md5"/>
        <files mask="inherit_graph_15.map"/>
        <files mask="group__port.map"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_request_context__coll__graph.svg"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.svg"/>
        <files mask="inherit_graph_7.svg"/>
        <files mask="group__rpmsg__linux__transport.md5"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.map"/>
        <files mask="inherit_graph_8.svg"/>
        <files mask="group__mu__transport.map"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.svg"/>
        <files mask="group__infra.map"/>
        <files mask="erpc__manually__constructed_8h__incl.map"/>
        <files mask="group__rpmsg__lite__rtos__transport.md5"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.map"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.md5"/>
        <files mask="erpc__static__queue_8h__dep__incl.map"/>
        <files mask="erpc__message__loggers_8h__incl.map"/>
        <files mask="erpc__spi__slave__transport_8h__incl.svg"/>
        <files mask="group__server__setup.md5"/>
        <files mask="inherit_graph_6.md5"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_codec__inherit__graph.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.svg"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.map"/>
        <files mask="group__transport__setup.map"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.map"/>
        <files mask="inherit_graph_22.svg"/>
        <files mask="inherit_graph_17.md5"/>
        <files mask="group__rpmsg__lite__rtos__transport.svg"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.map"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.map"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.svg"/>
        <files mask="inherit_graph_23.map"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.md5"/>
        <files mask="inherit_graph_12.md5"/>
        <files mask="inherit_graph_12.map"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.svg"/>
        <files mask="erpc__basic__codec_8h__incl.svg"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.map"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.md5"/>
        <files mask="group__dspi__master__transport.map"/>
        <files mask="erpc__transport__arbitrator_8h__incl.svg"/>
        <files mask="inherit_graph_6.map"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.map"/>
        <files mask="erpc__server__setup_8h__incl.md5"/>
        <files mask="group__tcp__transport.map"/>
        <files mask="group__port__serial.map"/>
        <files mask="group__dspi__slave__transport.map"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.map"/>
        <files mask="erpc__static__queue_8h__incl.map"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.svg"/>
        <files mask="erpc__message__buffer_8h__dep__incl.map"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.svg"/>
        <files mask="erpc__transport_8h__incl.md5"/>
        <files mask="inherit_graph_10.md5"/>
        <files mask="erpc__codec_8h__incl.map"/>
        <files mask="erpc__serial__transport_8h__incl.map"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.map"/>
        <files mask="erpc__transport_8h__dep__incl.md5"/>
        <files mask="inherit_graph_6.svg"/>
        <files mask="classerpc_1_1_server__coll__graph.md5"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.map"/>
        <files mask="erpc__client__manager_8h__incl.svg"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.svg"/>
        <files mask="group__port.md5"/>
        <files mask="erpc__crc16_8h__incl.md5"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.md5"/>
        <files mask="inherit_graph_3.svg"/>
        <files mask="group__rpmsg__tty__rtos__transport.map"/>
        <files mask="group__rpmsg__tty__rtos__transport.md5"/>
        <files mask="inherit_graph_11.md5"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.svg"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.map"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.svg"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.svg"/>
        <files mask="erpc__config_8h__dep__incl.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.svg"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.map"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.svg"/>
        <files mask="inherit_graph_21.map"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.svg"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.md5"/>
        <files mask="inherit_graph_5.map"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.svg"/>
        <files mask="erpc__mbf__setup_8h__incl.map"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.svg"/>
        <files mask="class_static_message_buffer_factory__coll__graph.md5"/>
        <files mask="classerpc_1_1_codec__coll__graph.map"/>
        <files mask="inherit_graph_4.svg"/>
        <files mask="inherit_graph_11.svg"/>
        <files mask="group__serial__transport.map"/>
        <files mask="erpc__client__setup_8h__incl.map"/>
        <files mask="group__transports.map"/>
        <files mask="inherit_graph_16.map"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.svg"/>
        <files mask="erpc__client__manager_8h__dep__incl.svg"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.md5"/>
        <files mask="group__infra__client.map"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.md5"/>
        <files mask="group__uart__transport.md5"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.svg"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.svg"/>
        <files mask="erpc__threading_8h__dep__incl.md5"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.svg"/>
        <files mask="erpc__client__manager_8h__dep__incl.md5"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.map"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.md5"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.svg"/>
        <files mask="classerpc_1_1_server__inherit__graph.svg"/>
        <files mask="inherit_graph_3.md5"/>
        <files mask="classerpc_1_1_codec__inherit__graph.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_server__coll__graph.map"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.md5"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.map"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.svg"/>
        <files mask="group__dspi__master__transport.svg"/>
        <files mask="erpc__mu__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_service__coll__graph.svg"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.map"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.svg"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.map"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.svg"/>
        <files mask="inherit_graph_15.md5"/>
        <files mask="group__port__serial.svg"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.md5"/>
        <files mask="inherit_graph_23.svg"/>
        <files mask="erpc__transport__setup_8h__incl.md5"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.md5"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.map"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.md5"/>
        <files mask="inherit_graph_10.svg"/>
        <files mask="inherit_graph_3.map"/>
        <files mask="inherit_graph_2.svg"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.md5"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.md5"/>
        <files mask="group__spi__slave__transport.svg"/>
        <files mask="erpc__framed__transport_8h__dep__incl.svg"/>
        <files mask="erpc__server_8h__incl.md5"/>
        <files mask="inherit_graph_13.md5"/>
        <files mask="inherit_graph_4.map"/>
        <files mask="erpc__message__buffer_8h__incl.svg"/>
        <files mask="group__port__threads.map"/>
        <files mask="erpc__server_8h__incl.map"/>
        <files mask="group__rpmsg__linux__transport.map"/>
        <files mask="inherit_graph_9.md5"/>
        <files mask="erpc__codec_8h__incl.svg"/>
        <files mask="inherit_graph_18.md5"/>
        <files mask="group__serial__transport.md5"/>
        <files mask="group__infra__utility.map"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.md5"/>
        <files mask="erpc__client__manager_8h__incl.md5"/>
        <files mask="group__rpmsg__lite__transport.svg"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.svg"/>
        <files mask="erpc__crc16_8h__dep__incl.md5"/>
        <files mask="inherit_graph_13.map"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.md5"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.svg"/>
        <files mask="erpc__codec_8h__dep__incl.svg"/>
        <files mask="erpc__transport_8h__incl.map"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.md5"/>
        <files mask="erpc__message__buffer_8h__dep__incl.md5"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.svg"/>
        <files mask="erpc__serial_8h__incl.md5"/>
        <files mask="group__dspi__master__transport.md5"/>
        <files mask="inherit_graph_20.map"/>
        <files mask="erpc__transport__setup_8h__dep__incl.md5"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.map"/>
        <files mask="erpc__threading_8h__incl.md5"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.svg"/>
        <files mask="group__itbp__transport.svg"/>
        <files mask="inherit_graph_12.svg"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.md5"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.svg"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.md5"/>
        <files mask="group__transports.md5"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.map"/>
        <files mask="group__client__setup.map"/>
        <files mask="erpc__spi__slave__transport_8h__incl.md5"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.svg"/>
        <files mask="inherit_graph_20.md5"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.md5"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.svg"/>
        <files mask="erpc__framed__transport_8h__incl.md5"/>
        <files mask="erpc__simple__server_8h__incl.svg"/>
        <files mask="group__port__serial.md5"/>
        <files mask="inherit_graph_8.md5"/>
        <files mask="group__port__threads.svg"/>
        <files mask="inherit_graph_2.map"/>
        <files mask="erpc__tcp__transport_8h__incl.svg"/>
        <files mask="erpc__transport_8h__incl.svg"/>
        <files mask="group__rpmsg__linux__transport.svg"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.map"/>
        <files mask="erpc__threading_8h__incl.svg"/>
        <files mask="erpc__framed__transport_8h__incl.svg"/>
        <files mask="inherit_graph_0.map"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.map"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.md5"/>
        <files mask="erpc__transport__setup_8h__incl.svg"/>
        <files mask="group__infra__codec.svg"/>
        <files mask="erpc__simple__server_8h__incl.map"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.md5"/>
        <files mask="inherit_graph_23.md5"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.md5"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.md5"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.map"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.md5"/>
        <files mask="erpc__basic__codec_8h__incl.md5"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.md5"/>
        <files mask="group__port__mem.map"/>
        <files mask="inherit_graph_13.svg"/>
        <files mask="group__server__setup.map"/>
        <files mask="erpc__client__manager_8h__incl.map"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.map"/>
        <files mask="erpc__message__buffer_8h__dep__incl.svg"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.map"/>
        <files mask="group__client__setup.md5"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.map"/>
        <files mask="group__client__setup.svg"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.svg"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.map"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_service__coll__graph.md5"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.map"/>
        <files mask="group__rpmsg__lite__rtos__transport.map"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.md5"/>
        <files mask="erpc__server_8h__incl.svg"/>
        <files mask="class_static_message_buffer_factory__coll__graph.map"/>
        <files mask="group__port__mem.md5"/>
        <files mask="erpc__static__queue_8h__incl.svg"/>
        <files mask="erpc__mbf__setup_8h__incl.md5"/>
        <files mask="erpc__message__loggers_8h__incl.md5"/>
        <files mask="inherit_graph_21.svg"/>
        <files mask="group__server__setup.svg"/>
        <files mask="group__dspi__slave__transport.md5"/>
        <files mask="group__port__mem.svg"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.map"/>
        <files mask="erpc__dspi__master__transport_8h__incl.svg"/>
        <files mask="group__infra__codec.md5"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.md5"/>
        <files mask="group__serial__transport.svg"/>
        <files mask="erpc__codec_8h__dep__incl.md5"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.md5"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.svg"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.md5"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.md5"/>
        <files mask="group__infra__server.svg"/>
        <files mask="classerpc_1_1_request_context__coll__graph.md5"/>
        <files mask="erpc__codec_8h__incl.md5"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.svg"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.md5"/>
        <files mask="erpc__dspi__master__transport_8h__incl.md5"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.map"/>
        <files mask="erpc__crc16_8h__incl.map"/>
        <files mask="group__transport__setup.md5"/>
        <files mask="classerpc_1_1_service__coll__graph.map"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.md5"/>
        <files mask="erpc__server__setup_8h__incl.map"/>
        <files mask="classerpc_1_1_server__inherit__graph.md5"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.md5"/>
        <files mask="group__setup.svg"/>
        <files mask="inherit_graph_16.md5"/>
        <files mask="graph_legend.svg"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.map"/>
        <files mask="inherit_graph_21.md5"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.md5"/>
        <files mask="erpc__port_8h__incl.md5"/>
        <files mask="class_static_message_buffer_factory__coll__graph.svg"/>
        <files mask="group__infra__transport.map"/>
        <files mask="inherit_graph_14.svg"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.svg"/>
        <files mask="erpc__server_8h__dep__incl.map"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_codec__coll__graph.md5"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.svg"/>
        <files mask="group__uart__transport.map"/>
        <files mask="erpc__client__setup_8h__incl.svg"/>
        <files mask="erpc__spi__master__transport_8h__incl.md5"/>
        <files mask="group__infra__transport.svg"/>
        <files mask="classerpc_1_1_transport__inherit__graph.md5"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.md5"/>
        <files mask="inherit_graph_18.map"/>
        <files mask="group__transports.svg"/>
        <files mask="erpc__serial_8h__incl.svg"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.map"/>
        <files mask="erpc__transport__setup_8h__incl.map"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.map"/>
        <files mask="group__infra__client.md5"/>
        <files mask="group__spi__master__transport.map"/>
        <files mask="inherit_graph_14.map"/>
        <files mask="group__infra__utility.md5"/>
        <files mask="group__infra__utility.svg"/>
        <files mask="erpc__transport__arbitrator_8h__incl.map"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.map"/>
        <files mask="inherit_graph_19.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.md5"/>
        <files mask="erpc__transport_8h__dep__incl.map"/>
        <files mask="erpc__spi__master__transport_8h__incl.map"/>
        <files mask="erpc__crc16_8h__incl.svg"/>
        <files mask="group__spi__master__transport.svg"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_transport__inherit__graph.map"/>
        <files mask="group__infra__client.svg"/>
        <files mask="group__port.svg"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_codec__inherit__graph.map"/>
        <files mask="erpc__tcp__transport_8h__incl.map"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="script">
        <files mask="classerpc_1_1_simple_server.js"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.js"/>
        <files mask="classerpc_1_1_transport_factory.js"/>
        <files mask="classerpc_1_1_framed_transport.js"/>
        <files mask="group__config.js"/>
        <files mask="classerpc_1_1_dspi_slave_transport.js"/>
        <files mask="erpc__arbitrated__client__setup_8h.js"/>
        <files mask="classerpc_1_1_m_u_transport.js"/>
        <files mask="group__port__threads.js"/>
        <files mask="classerpc_1_1_dspi_master_transport.js"/>
        <files mask="classerpc_1_1_message_loggers.js"/>
        <files mask="erpc__client__setup_8h.js"/>
        <files mask="group__rpmsg__linux__transport.js"/>
        <files mask="annotated_dup.js"/>
        <files mask="classerpc_1_1_uart_transport.js"/>
        <files mask="erpc__threading_8h.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="class_static_message_buffer_factory.js"/>
        <files mask="modules.js"/>
        <files mask="group__setup.js"/>
        <files mask="classerpc_1_1_spi_slave_transport.js"/>
        <files mask="classerpc_1_1_basic_codec.js"/>
        <files mask="erpc__server__setup_8h.js"/>
        <files mask="erpc__codec_8h.js"/>
        <files mask="group__port.js"/>
        <files mask="navtreedata.js"/>
        <files mask="classerpc_1_1_client_manager.js"/>
        <files mask="classerpc_1_1_message_logger.js"/>
        <files mask="navtree.js"/>
        <files mask="group__itbp__transport.js"/>
        <files mask="erpc__client__manager_8h.js"/>
        <files mask="group__infra__utility.js"/>
        <files mask="classerpc_1_1_manually_constructed.js"/>
        <files mask="classerpc_1_1_transport_arbitrator.js"/>
        <files mask="group__spi__master__transport.js"/>
        <files mask="classerpc_1_1_semaphore.js"/>
        <files mask="dynsections.js"/>
        <files mask="group__infra__codec.js"/>
        <files mask="functions_func.js"/>
        <files mask="group__serial__transport.js"/>
        <files mask="classerpc_1_1_spi_master_transport.js"/>
        <files mask="group__infra__client.js"/>
        <files mask="group__client__setup.js"/>
        <files mask="erpc__basic__codec_8h.js"/>
        <files mask="group__rpmsg__lite__transport.js"/>
        <files mask="group__rpmsg__lite__rtos__transport.js"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.js"/>
        <files mask="group__uart__transport.js"/>
        <files mask="group__server__setup.js"/>
        <files mask="group__spi__slave__transport.js"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.js"/>
        <files mask="erpc__mu__transport_8h.js"/>
        <files mask="erpc__mbf__setup_8h.js"/>
        <files mask="class_r_p_msg_message_buffer_factory.js"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.js"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.js"/>
        <files mask="group__dspi__slave__transport.js"/>
        <files mask="classerpc_1_1_server.js"/>
        <files mask="classerpc_1_1_message_buffer.js"/>
        <files mask="group__message__buffer__factory__setup.js"/>
        <files mask="classerpc_1_1_mutex.js"/>
        <files mask="classerpc_1_1_service.js"/>
        <files mask="group__port__mem.js"/>
        <files mask="erpc__config_8h.js"/>
        <files mask="class_dynamic_message_buffer_factory.js"/>
        <files mask="classerpc_1_1_r_p_msg_transport.js"/>
        <files mask="classerpc_1_1_crc16.js"/>
        <files mask="resize.js"/>
        <files mask="group__infra__transport.js"/>
        <files mask="group__rpmsg__tty__rtos__transport.js"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.js"/>
        <files mask="functions_dup.js"/>
        <files mask="classerpc_1_1_codec.js"/>
        <files mask="group__mu__transport.js"/>
        <files mask="classerpc_1_1_basic_codec_factory.js"/>
        <files mask="classerpc_1_1_t_c_p_transport.js"/>
        <files mask="classerpc_1_1_serial_transport.js"/>
        <files mask="classerpc_1_1_message_buffer_factory.js"/>
        <files mask="group__port__serial.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="erpc__serial_8h.js"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.js"/>
        <files mask="classerpc_1_1_transport.js"/>
        <files mask="group__infra__server.js"/>
        <files mask="group__transport__setup.js"/>
        <files mask="group__tcp__transport.js"/>
        <files mask="group__infra.js"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.js"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="classerpc_1_1_request_context.js"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.js"/>
        <files mask="group__transports.js"/>
        <files mask="classerpc_1_1_codec_factory.js"/>
        <files mask="classerpc_1_1_thread.js"/>
        <files mask="erpc__transport__setup_8h.js"/>
        <files mask="jquery.js"/>
        <files mask="hierarchy.js"/>
        <files mask="classerpc_1_1_static_queue.js"/>
        <files mask="group__dspi__master__transport.js"/>
        <files mask="erpc__port_8h.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="files.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="doc">
        <files mask="classerpc_1_1_manually_constructed.html"/>
        <files mask="functions_l.html"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.html"/>
        <files mask="classerpc_1_1_dspi_slave_transport-members.html"/>
        <files mask="classerpc_1_1_semaphore-members.html"/>
        <files mask="classerpc_1_1_m_u_transport.html"/>
        <files mask="group__rpmsg__tty__rtos__transport.html"/>
        <files mask="functions_func_f.html"/>
        <files mask="erpc__transport__setup_8h.html"/>
        <files mask="functions_s.html"/>
        <files mask="group__dspi__master__transport.html"/>
        <files mask="erpc__dspi__master__transport_8h_source.html"/>
        <files mask="classerpc_1_1_message_buffer.html"/>
        <files mask="classerpc_1_1_message_buffer_factory-members.html"/>
        <files mask="erpc__client__setup_8h.html"/>
        <files mask="classerpc_1_1_spi_master_transport.html"/>
        <files mask="erpc__server__setup_8h_source.html"/>
        <files mask="group__mu__transport.html"/>
        <files mask="doxygen.css"/>
        <files mask="erpc__framed__transport_8h.html"/>
        <files mask="group__rpmsg__lite__rtos__transport.html"/>
        <files mask="classerpc_1_1_dspi_master_transport.html"/>
        <files mask="erpc__manually__constructed_8h_source.html"/>
        <files mask="classerpc_1_1_dspi_master_transport-members.html"/>
        <files mask="erpc__mu__transport_8h.html"/>
        <files mask="erpc__server_8h.html"/>
        <files mask="erpc__serial__transport_8h.html"/>
        <files mask="erpc__arbitrated__client__setup_8h_source.html"/>
        <files mask="functions_func_d.html"/>
        <files mask="classerpc_1_1_transport_arbitrator-members.html"/>
        <files mask="group__itbp__transport.html"/>
        <files mask="dir_52949f44d4caf8ec53681e2fdb42569d.html"/>
        <files mask="functions_func_m.html"/>
        <files mask="functions_func_w.html"/>
        <files mask="group__infra__transport.html"/>
        <files mask="classerpc_1_1_spi_slave_transport.html"/>
        <files mask="functions_o.html"/>
        <files mask="erpc__spi__master__transport_8h.html"/>
        <files mask="erpc__codec_8h.html"/>
        <files mask="class_r_p_msg_message_buffer_factory-members.html"/>
        <files mask="inherits.html"/>
        <files mask="classerpc_1_1_message_logger.html"/>
        <files mask="erpc__transport_8h_source.html"/>
        <files mask="erpc__inter__thread__buffer__transport_8h.html"/>
        <files mask="erpc__simple__server_8h.html"/>
        <files mask="functions_v.html"/>
        <files mask="erpc__uart__cmsis__transport_8h_source.html"/>
        <files mask="class_dynamic_message_buffer_factory.html"/>
        <files mask="erpc__serial__transport_8h_source.html"/>
        <files mask="group__serial__transport.html"/>
        <files mask="group__rpmsg__linux__transport.html"/>
        <files mask="group__port__threads.html"/>
        <files mask="group__spi__slave__transport.html"/>
        <files mask="dir_000001_000004.html"/>
        <files mask="erpc__spi__slave__transport_8h.html"/>
        <files mask="files.html"/>
        <files mask="classerpc_1_1_manually_constructed-members.html"/>
        <files mask="classerpc_1_1_message_loggers-members.html"/>
        <files mask="classerpc_1_1_mutex_1_1_guard-members.html"/>
        <files mask="classerpc_1_1_thread-members.html"/>
        <files mask="classerpc_1_1_dspi_slave_transport.html"/>
        <files mask="erpc__dspi__slave__transport_8h.html"/>
        <files mask="classerpc_1_1_basic_codec.html"/>
        <files mask="group__infra__client.html"/>
        <files mask="classerpc_1_1_client_manager-members.html"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.html"/>
        <files mask="group__infra__server.html"/>
        <files mask="erpc__static__queue_8h.html"/>
        <files mask="erpc__server_8h_source.html"/>
        <files mask="erpc__config_8h_source.html"/>
        <files mask="classerpc_1_1_arbitrated_client_manager-members.html"/>
        <files mask="dir_000004_000003.html"/>
        <files mask="globals_type.html"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.html"/>
        <files mask="classerpc_1_1_framed_transport-members.html"/>
        <files mask="classerpc_1_1_basic_codec_factory-members.html"/>
        <files mask="classerpc_1_1_server-members.html"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h.html"/>
        <files mask="classerpc_1_1_serial_transport.html"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.html"/>
        <files mask="dir_000002_000004.html"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h.html"/>
        <files mask="classerpc_1_1_transport-members.html"/>
        <files mask="classerpc_1_1_simple_server-members.html"/>
        <files mask="functions_vars.html"/>
        <files mask="class_static_message_buffer_factory.html"/>
        <files mask="functions_m.html"/>
        <files mask="erpc__arbitrated__client__setup_8h.html"/>
        <files mask="functions_func_t.html"/>
        <files mask="erpc__rpmsg__linux__transport_8h_source.html"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h_source.html"/>
        <files mask="erpc__spi__master__transport_8h_source.html"/>
        <files mask="erpc__dspi__slave__transport_8h_source.html"/>
        <files mask="functions_t.html"/>
        <files mask="erpc__port_8h_source.html"/>
        <files mask="classerpc_1_1_framed_transport.html"/>
        <files mask="erpc__version_8h_source.html"/>
        <files mask="classerpc_1_1_codec.html"/>
        <files mask="classerpc_1_1_service-members.html"/>
        <files mask="class_static_message_buffer_factory-members.html"/>
        <files mask="functions_h.html"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.html"/>
        <files mask="classerpc_1_1_message_buffer-members.html"/>
        <files mask="erpc__port_8h.html"/>
        <files mask="functions_func.html"/>
        <files mask="functions_c.html"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport-members.html"/>
        <files mask="functions_u.html"/>
        <files mask="erpc__crc16_8h.html"/>
        <files mask="group__infra__utility.html"/>
        <files mask="class_r_p_msg_message_buffer_factory.html"/>
        <files mask="group__transports.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="erpc__spi__slave__transport_8h_source.html"/>
        <files mask="erpc__message__buffer_8h.html"/>
        <files mask="functions_0x7e.html"/>
        <files mask="erpc__server__setup_8h.html"/>
        <files mask="classerpc_1_1_service.html"/>
        <files mask="erpc__message__loggers_8h.html"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac.html"/>
        <files mask="classerpc_1_1_mutex-members.html"/>
        <files mask="classerpc_1_1_message_logger-members.html"/>
        <files mask="erpc__dspi__master__transport_8h.html"/>
        <files mask="classerpc_1_1_transport_arbitrator.html"/>
        <files mask="functions_func_v.html"/>
        <files mask="hierarchy.html"/>
        <files mask="group__rpmsg__lite__transport.html"/>
        <files mask="classerpc_1_1_message_buffer_factory.html"/>
        <files mask="classerpc_1_1_simple_server.html"/>
        <files mask="functions_k.html"/>
        <files mask="classerpc_1_1_static_queue-members.html"/>
        <files mask="globals.html"/>
        <files mask="functions_func_r.html"/>
        <files mask="dir_000002_000005.html"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.html"/>
        <files mask="classerpc_1_1_mutex.html"/>
        <files mask="navtree.css"/>
        <files mask="group__port__mem.html"/>
        <files mask="functions_func_i.html"/>
        <files mask="group__uart__transport.html"/>
        <files mask="classerpc_1_1_semaphore.html"/>
        <files mask="functions_p.html"/>
        <files mask="erpc__uart__cmsis__transport_8h.html"/>
        <files mask="classerpc_1_1_codec_factory-members.html"/>
        <files mask="erpc__message__buffer_8h_source.html"/>
        <files mask="group__transport__setup.html"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info-members.html"/>
        <files mask="dir_000005_000001.html"/>
        <files mask="group__tcp__transport.html"/>
        <files mask="erpc__serial_8h_source.html"/>
        <files mask="classerpc_1_1_transport_factory-members.html"/>
        <files mask="erpc__arbitrated__client__manager_8h_source.html"/>
        <files mask="group__message__buffer__factory__setup.html"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h_source.html"/>
        <files mask="group__infra__codec.html"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.html"/>
        <files mask="erpc__codec_8h_source.html"/>
        <files mask="erpc__serial_8h.html"/>
        <files mask="erpc__threading_8h_source.html"/>
        <files mask="functions_i.html"/>
        <files mask="erpc__inter__thread__buffer__transport_8h_source.html"/>
        <files mask="erpc__transport__arbitrator_8h_source.html"/>
        <files mask="erpc__client__manager_8h.html"/>
        <files mask="functions.html"/>
        <files mask="classerpc_1_1_codec-members.html"/>
        <files mask="dir_000002_000001.html"/>
        <files mask="group__config.html"/>
        <files mask="classerpc_1_1_transport.html"/>
        <files mask="functions_f.html"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.html"/>
        <files mask="erpc__client__manager_8h_source.html"/>
        <files mask="graph_legend.html"/>
        <files mask="globals_func.html"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.html"/>
        <files mask="classerpc_1_1_spi_master_transport-members.html"/>
        <files mask="classerpc_1_1_basic_codec-members.html"/>
        <files mask="erpc__static__queue_8h_source.html"/>
        <files mask="erpc__arbitrated__client__manager_8h.html"/>
        <files mask="classerpc_1_1_r_p_msg_transport-members.html"/>
        <files mask="erpc__common_8h_source.html"/>
        <files mask="erpc__transport__arbitrator_8h.html"/>
        <files mask="classerpc_1_1_message_loggers.html"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h.html"/>
        <files mask="classerpc_1_1_server.html"/>
        <files mask="erpc__mbf__setup_8h_source.html"/>
        <files mask="classerpc_1_1_client_manager.html"/>
        <files mask="classerpc_1_1_thread.html"/>
        <files mask="erpc__client__setup_8h_source.html"/>
        <files mask="dir_000005_000004.html"/>
        <files mask="erpc__transport__setup_8h_source.html"/>
        <files mask="erpc__rpmsg__lite__transport_8h_source.html"/>
        <files mask="group__port.html"/>
        <files mask="erpc__config__internal_8h_source.html"/>
        <files mask="classerpc_1_1_request_context.html"/>
        <files mask="erpc__framed__transport_8h_source.html"/>
        <files mask="classerpc_1_1_t_c_p_transport.html"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88.html"/>
        <files mask="functions_w.html"/>
        <files mask="functions_func_0x7e.html"/>
        <files mask="classerpc_1_1_serial_transport-members.html"/>
        <files mask="classerpc_1_1_crc16-members.html"/>
        <files mask="class_dynamic_message_buffer_factory-members.html"/>
        <files mask="modules.html"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor-members.html"/>
        <files mask="group__infra.html"/>
        <files mask="erpc__tcp__transport_8h.html"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb.html"/>
        <files mask="erpc__message__loggers_8h_source.html"/>
        <files mask="erpc__tcp__transport_8h_source.html"/>
        <files mask="classerpc_1_1_m_u_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport-members.html"/>
        <files mask="classerpc_1_1_transport_factory.html"/>
        <files mask="classerpc_1_1_codec_factory.html"/>
        <files mask="functions_func_u.html"/>
        <files mask="classerpc_1_1_basic_codec_factory.html"/>
        <files mask="group__setup.html"/>
        <files mask="functions_g.html"/>
        <files mask="erpc__rpmsg__lite__transport_8h.html"/>
        <files mask="functions_func_s.html"/>
        <files mask="group__server__setup.html"/>
        <files mask="erpc__manually__constructed_8h.html"/>
        <files mask="erpc__threading_8h.html"/>
        <files mask="classerpc_1_1_r_p_msg_transport.html"/>
        <files mask="classes.html"/>
        <files mask="classerpc_1_1_uart_transport-members.html"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h_source.html"/>
        <files mask="functions_func_p.html"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562.html"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.html"/>
        <files mask="functions_func_h.html"/>
        <files mask="erpc__transport_8h.html"/>
        <files mask="erpc__config_8h.html"/>
        <files mask="erpc__basic__codec_8h_source.html"/>
        <files mask="functions_func_o.html"/>
        <files mask="classerpc_1_1_uart_transport.html"/>
        <files mask="tabs.css"/>
        <files mask="functions_type.html"/>
        <files mask="group__spi__master__transport.html"/>
        <files mask="functions_func_g.html"/>
        <files mask="functions_r.html"/>
        <files mask="erpc__mu__transport_8h_source.html"/>
        <files mask="classerpc_1_1_request_context-members.html"/>
        <files mask="erpc__mbf__setup_8h.html"/>
        <files mask="classerpc_1_1_t_c_p_transport-members.html"/>
        <files mask="annotated.html"/>
        <files mask="functions_func_c.html"/>
        <files mask="classerpc_1_1_static_queue.html"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport-members.html"/>
        <files mask="index.html"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport-members.html"/>
        <files mask="group__client__setup.html"/>
        <files mask="globals_defs.html"/>
        <files mask="functions_d.html"/>
        <files mask="classerpc_1_1_spi_slave_transport-members.html"/>
        <files mask="classerpc_1_1_crc16.html"/>
        <files mask="group__dspi__slave__transport.html"/>
        <files mask="functions_func_l.html"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory-members.html"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815.html"/>
        <files mask="erpc__crc16_8h_source.html"/>
        <files mask="erpc__simple__server_8h_source.html"/>
        <files mask="erpc__basic__codec_8h.html"/>
        <files mask="group__port__serial.html"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport-members.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="image">
        <files mask="nav_g.png"/>
        <files mask="sync_on.png"/>
        <files mask="doxygen.png"/>
        <files mask="closed.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="bc_s.png"/>
        <files mask="tab_b.png"/>
        <files mask="doc.png"/>
        <files mask="open.png"/>
        <files mask="rpc_block_diagram.png"/>
        <files mask="sync_off.png"/>
        <files mask="splitbar.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="arrowdown.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_h.png"/>
        <files mask="arrowright.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="doc">
        <files mask="groups_6.html"/>
        <files mask="all_3.html"/>
        <files mask="functions_4.html"/>
        <files mask="groups_0.html"/>
        <files mask="groups_4.html"/>
        <files mask="classes_d.html"/>
        <files mask="functions_b.html"/>
        <files mask="all_e.html"/>
        <files mask="search.css"/>
        <files mask="all_c.html"/>
        <files mask="variables_0.html"/>
        <files mask="typedefs_0.html"/>
        <files mask="all_14.html"/>
        <files mask="all_6.html"/>
        <files mask="functions_5.html"/>
        <files mask="functions_6.html"/>
        <files mask="functions_10.html"/>
        <files mask="all_10.html"/>
        <files mask="files_0.html"/>
        <files mask="functions_1.html"/>
        <files mask="classes_3.html"/>
        <files mask="groups_8.html"/>
        <files mask="all_11.html"/>
        <files mask="classes_0.html"/>
        <files mask="classes_c.html"/>
        <files mask="classes_5.html"/>
        <files mask="functions_c.html"/>
        <files mask="classes_b.html"/>
        <files mask="all_0.html"/>
        <files mask="groups_5.html"/>
        <files mask="groups_2.html"/>
        <files mask="functions_9.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_0.html"/>
        <files mask="classes_9.html"/>
        <files mask="enums_0.html"/>
        <files mask="all_4.html"/>
        <files mask="functions_2.html"/>
        <files mask="all_13.html"/>
        <files mask="variables_1.html"/>
        <files mask="functions_11.html"/>
        <files mask="classes_a.html"/>
        <files mask="all_12.html"/>
        <files mask="functions_3.html"/>
        <files mask="all_f.html"/>
        <files mask="classes_6.html"/>
        <files mask="classes_1.html"/>
        <files mask="functions_e.html"/>
        <files mask="all_a.html"/>
        <files mask="typedefs_3.html"/>
        <files mask="all_b.html"/>
        <files mask="functions_f.html"/>
        <files mask="all_7.html"/>
        <files mask="nomatches.html"/>
        <files mask="all_8.html"/>
        <files mask="classes_2.html"/>
        <files mask="groups_7.html"/>
        <files mask="all_15.html"/>
        <files mask="all_9.html"/>
        <files mask="functions_12.html"/>
        <files mask="pages_0.html"/>
        <files mask="classes_7.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="classes_8.html"/>
        <files mask="all_2.html"/>
        <files mask="functions_7.html"/>
        <files mask="variables_2.html"/>
        <files mask="functions_8.html"/>
        <files mask="groups_3.html"/>
        <files mask="all_1.html"/>
        <files mask="typedefs_1.html"/>
        <files mask="functions_d.html"/>
        <files mask="enums_1.html"/>
        <files mask="all_d.html"/>
        <files mask="typedefs_2.html"/>
        <files mask="groups_1.html"/>
        <files mask="all_5.html"/>
        <files mask="classes_4.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="script">
        <files mask="groups_4.js"/>
        <files mask="all_12.js"/>
        <files mask="all_a.js"/>
        <files mask="all_3.js"/>
        <files mask="all_13.js"/>
        <files mask="groups_6.js"/>
        <files mask="enums_1.js"/>
        <files mask="classes_6.js"/>
        <files mask="enums_0.js"/>
        <files mask="classes_2.js"/>
        <files mask="classes_1.js"/>
        <files mask="functions_3.js"/>
        <files mask="functions_1.js"/>
        <files mask="all_c.js"/>
        <files mask="all_15.js"/>
        <files mask="all_b.js"/>
        <files mask="classes_8.js"/>
        <files mask="functions_8.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="all_4.js"/>
        <files mask="functions_11.js"/>
        <files mask="functions_2.js"/>
        <files mask="functions_f.js"/>
        <files mask="functions_7.js"/>
        <files mask="classes_7.js"/>
        <files mask="groups_7.js"/>
        <files mask="all_0.js"/>
        <files mask="variables_2.js"/>
        <files mask="classes_b.js"/>
        <files mask="groups_5.js"/>
        <files mask="searchdata.js"/>
        <files mask="functions_e.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="functions_c.js"/>
        <files mask="all_5.js"/>
        <files mask="groups_0.js"/>
        <files mask="files_0.js"/>
        <files mask="groups_8.js"/>
        <files mask="groups_1.js"/>
        <files mask="functions_12.js"/>
        <files mask="functions_a.js"/>
        <files mask="groups_3.js"/>
        <files mask="groups_2.js"/>
        <files mask="all_8.js"/>
        <files mask="typedefs_2.js"/>
        <files mask="all_d.js"/>
        <files mask="classes_d.js"/>
        <files mask="functions_4.js"/>
        <files mask="functions_b.js"/>
        <files mask="all_7.js"/>
        <files mask="all_11.js"/>
        <files mask="all_10.js"/>
        <files mask="classes_9.js"/>
        <files mask="functions_d.js"/>
        <files mask="classes_4.js"/>
        <files mask="classes_c.js"/>
        <files mask="classes_5.js"/>
        <files mask="functions_9.js"/>
        <files mask="variables_0.js"/>
        <files mask="functions_10.js"/>
        <files mask="all_14.js"/>
        <files mask="classes_a.js"/>
        <files mask="all_9.js"/>
        <files mask="all_2.js"/>
        <files mask="typedefs_1.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="all_1.js"/>
        <files mask="typedefs_3.js"/>
        <files mask="all_e.js"/>
        <files mask="functions_6.js"/>
        <files mask="all_6.js"/>
        <files mask="functions_0.js"/>
        <files mask="classes_3.js"/>
        <files mask="functions_5.js"/>
        <files mask="variables_1.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="image">
        <files mask="search_r.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="doc">
        <files mask="classerpcgen_1_1_list_type.html"/>
        <files mask="cpptempl_8h_source.html"/>
        <files mask="classerpcgen_1_1semantic__error-members.html"/>
        <files mask="classerpcgen_1_1_interface_definition-members.html"/>
        <files mask="functions_l.html"/>
        <files mask="_symbol_scope_8h_source.html"/>
        <files mask="_data_type_8h_source.html"/>
        <files mask="annotations_8h_source.html"/>
        <files mask="_token_8h_source.html"/>
        <files mask="dir_acfaa839b8ffb0f73c7c3063e82240f2.html"/>
        <files mask="functions_func_f.html"/>
        <files mask="_program_8h_source.html"/>
        <files mask="classerpcgen_1_1_erpc_lexer.html"/>
        <files mask="functions_s.html"/>
        <files mask="classerpcgen_1_1_group-members.html"/>
        <files mask="dir_b0461de83f30261a836ec46318e22617.html"/>
        <files mask="class_path_searcher-members.html"/>
        <files mask="classerpcgen_1_1syntax__error-members.html"/>
        <files mask="classerpcgen_1_1_enum_type-members.html"/>
        <files mask="classcpptempl_1_1_data_list.html"/>
        <files mask="options_8h_source.html"/>
        <files mask="class_opt_argv_iter.html"/>
        <files mask="functions_n.html"/>
        <files mask="class_opt_argv_iter-members.html"/>
        <files mask="classerpcgen_1_1_struct_type.html"/>
        <files mask="doxygen.css"/>
        <files mask="_erpc_lexer_8h_source.html"/>
        <files mask="classerpcgen_1_1internal__error-members.html"/>
        <files mask="class_opt_istream_iter-members.html"/>
        <files mask="structsmart__ptr__delete__array-members.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_func_d.html"/>
        <files mask="classerpcgen_1_1_python_generator-members.html"/>
        <files mask="class_string_value.html"/>
        <files mask="classerpcgen_1_1_void_type-members.html"/>
        <files mask="_function_8h_source.html"/>
        <files mask="functions_func_m.html"/>
        <files mask="functions_func_w.html"/>
        <files mask="classerpcgen_1_1_union_type-members.html"/>
        <files mask="classerpcgen_1_1syntax__error2-members.html"/>
        <files mask="functions_o.html"/>
        <files mask="_parse_errors_8h_source.html"/>
        <files mask="functions_j.html"/>
        <files mask="_search_path_8h_source.html"/>
        <files mask="classerpcgen_1_1_struct_type-members.html"/>
        <files mask="classerpcgen_1_1_token-members.html"/>
        <files mask="classerpcgen_1_1_data_type-members.html"/>
        <files mask="class_opt_istream_iter.html"/>
        <files mask="classerpcgen_1_1_python_generator.html"/>
        <files mask="class_opt_str_tok_iter.html"/>
        <files mask="class_integer_value.html"/>
        <files mask="classerpcgen_1_1_current_file_info-members.html"/>
        <files mask="classerpcgen_1_1_alias_type.html"/>
        <files mask="class_integer_value-members.html"/>
        <files mask="functions_v.html"/>
        <files mask="classerpcgen_1_1lexical__error-members.html"/>
        <files mask="functions_eval.html"/>
        <files mask="classerpcgen_1_1_enum_member.html"/>
        <files mask="classcpptempl_1_1_template_exception-members.html"/>
        <files mask="smart__ptr_8h_source.html"/>
        <files mask="_const_type_8h_source.html"/>
        <files mask="classcpptempl_1_1_data_template.html"/>
        <files mask="files.html"/>
        <files mask="class_options.html"/>
        <files mask="classerpcgen_1_1_symbol-members.html"/>
        <files mask="functions_func_n.html"/>
        <files mask="_function_type_8h_source.html"/>
        <files mask="class_float_value-members.html"/>
        <files mask="classerpcgen_1_1erpcgen_tool-members.html"/>
        <files mask="classerpcgen_1_1_data_type.html"/>
        <files mask="functions_y.html"/>
        <files mask="classerpcgen_1_1_void_type.html"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error-members.html"/>
        <files mask="class_logger-members.html"/>
        <files mask="classerpcgen_1_1erpc__error.html"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.html"/>
        <files mask="functions_func_e.html"/>
        <files mask="classerpcgen_1_1_function_type.html"/>
        <files mask="_annotation_8h_source.html"/>
        <files mask="functions_vars.html"/>
        <files mask="_enum_type_8h_source.html"/>
        <files mask="classerpcgen_1_1_function_base-members.html"/>
        <files mask="functions_m.html"/>
        <files mask="classerpcgen_1_1_builtin_type.html"/>
        <files mask="functions_func_t.html"/>
        <files mask="class_string_value-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scope.html"/>
        <files mask="class_log.html"/>
        <files mask="functions_t.html"/>
        <files mask="classerpcgen_1_1_function_base.html"/>
        <files mask="functions_h.html"/>
        <files mask="functions_func.html"/>
        <files mask="classerpcgen_1_1_ast_node.html"/>
        <files mask="functions_c.html"/>
        <files mask="classerpcgen_1_1_c_generator.html"/>
        <files mask="classerpcgen_1_1_ast_walker.html"/>
        <files mask="classerpcgen_1_1_symbol_scanner.html"/>
        <files mask="classcpptempl_1_1data__ptr.html"/>
        <files mask="class_log_1_1_set_output_level.html"/>
        <files mask="classerpcgen_1_1_union_case-members.html"/>
        <files mask="functions_u.html"/>
        <files mask="classerpcgen_1_1_ast_printer-members.html"/>
        <files mask="classerpcgen_1_1_enum_type.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="classerpcgen_1_1_annotation-members.html"/>
        <files mask="functions_0x7e.html"/>
        <files mask="functions_enum.html"/>
        <files mask="class_opt_iter_rwd-members.html"/>
        <files mask="functions_func_v.html"/>
        <files mask="_alias_type_8h_source.html"/>
        <files mask="hierarchy.html"/>
        <files mask="functions_func_a.html"/>
        <files mask="_logging_8h_source.html"/>
        <files mask="format__string_8h_source.html"/>
        <files mask="functions_a.html"/>
        <files mask="classerpcgen_1_1erpcgen_tool.html"/>
        <files mask="functions_k.html"/>
        <files mask="classerpcgen_1_1_unique_id_checker-members.html"/>
        <files mask="classerpcgen_1_1_const_type.html"/>
        <files mask="_unique_id_checker_8h_source.html"/>
        <files mask="_enum_member_8h_source.html"/>
        <files mask="structsmart__ptr__delete-members.html"/>
        <files mask="class_opt_iter.html"/>
        <files mask="functions_func_r.html"/>
        <files mask="_builtin_type_8h_source.html"/>
        <files mask="classerpcgen_1_1_ast_node-members.html"/>
        <files mask="classerpcgen_1_1_c_generator-members.html"/>
        <files mask="classerpcgen_1_1_array_type.html"/>
        <files mask="navtree.css"/>
        <files mask="classcpptempl_1_1_template_exception.html"/>
        <files mask="classerpcgen_1_1_ast_printer.html"/>
        <files mask="classcpptempl_1_1_data_int-members.html"/>
        <files mask="classerpcgen_1_1_interface_definition.html"/>
        <files mask="classerpcgen_1_1_current_file_info.html"/>
        <files mask="functions_func_i.html"/>
        <files mask="structerpcgen_1_1token__loc__t-members.html"/>
        <files mask="dir_61c3f993326311b905af09f643fec799.html"/>
        <files mask="_group_8h_source.html"/>
        <files mask="functions_p.html"/>
        <files mask="classerpcgen_1_1_symbol.html"/>
        <files mask="classcpptempl_1_1_data_map.html"/>
        <files mask="_struct_type_8h_source.html"/>
        <files mask="classerpcgen_1_1_annotation.html"/>
        <files mask="classerpcgen_1_1_interface.html"/>
        <files mask="class_options-members.html"/>
        <files mask="functions_func_y.html"/>
        <files mask="class_option_spec-members.html"/>
        <files mask="class_opt_iter-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.html"/>
        <files mask="class_opt_str_tok_iter-members.html"/>
        <files mask="classsmart__ptr-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scanner-members.html"/>
        <files mask="functions_func_b.html"/>
        <files mask="classerpcgen_1_1semantic__error.html"/>
        <files mask="functions_e.html"/>
        <files mask="classerpcgen_1_1_function.html"/>
        <files mask="_symbol_8h_source.html"/>
        <files mask="class_option_spec.html"/>
        <files mask="structsmart__ptr__free.html"/>
        <files mask="functions_i.html"/>
        <files mask="classcpptempl_1_1data__map-members.html"/>
        <files mask="functions.html"/>
        <files mask="classerpcgen_1_1_builtin_type-members.html"/>
        <files mask="classerpcgen_1_1_program.html"/>
        <files mask="classerpcgen_1_1erpc__error-members.html"/>
        <files mask="classerpcgen_1_1syntax__error.html"/>
        <files mask="_python_generator_8h_source.html"/>
        <files mask="class_float_value.html"/>
        <files mask="class_stdout_logger-members.html"/>
        <files mask="functions_f.html"/>
        <files mask="class_logger.html"/>
        <files mask="os__config_8h_source.html"/>
        <files mask="class_stdout_logger.html"/>
        <files mask="classerpcgen_1_1_function_type-members.html"/>
        <files mask="_union_type_8h_source.html"/>
        <files mask="classcpptempl_1_1_data_bool-members.html"/>
        <files mask="classerpcgen_1_1_enum_member-members.html"/>
        <files mask="classcpptempl_1_1_data_value.html"/>
        <files mask="_symbol_scanner_8h_source.html"/>
        <files mask="_struct_member_8h_source.html"/>
        <files mask="classerpcgen_1_1_ast_walker-members.html"/>
        <files mask="classcpptempl_1_1_data_value-members.html"/>
        <files mask="classerpcgen_1_1_alias_type-members.html"/>
        <files mask="_list_type_8h_source.html"/>
        <files mask="class_path_searcher.html"/>
        <files mask="class_value-members.html"/>
        <files mask="classerpcgen_1_1lexical__error.html"/>
        <files mask="classerpcgen_1_1_generator.html"/>
        <files mask="dir_5d74497626cd518006bfc4bb021f3cae.html"/>
        <files mask="classerpcgen_1_1_list_type-members.html"/>
        <files mask="functions_q.html"/>
        <files mask="structsmart__ptr__free-members.html"/>
        <files mask="class_opt_iter_rwd.html"/>
        <files mask="classcpptempl_1_1_data_template-members.html"/>
        <files mask="classcpptempl_1_1_data_map-members.html"/>
        <files mask="classerpcgen_1_1_unique_id_checker.html"/>
        <files mask="_c_generator_8h_source.html"/>
        <files mask="functions_w.html"/>
        <files mask="classerpcgen_1_1_struct_member.html"/>
        <files mask="functions_func_0x7e.html"/>
        <files mask="classerpcgen_1_1_const_type-members.html"/>
        <files mask="classerpcgen_1_1_program-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scope-members.html"/>
        <files mask="functions_func_j.html"/>
        <files mask="_hex_values_8h_source.html"/>
        <files mask="functions_func_u.html"/>
        <files mask="_interface_definition_8h_source.html"/>
        <files mask="classerpcgen_1_1_union_case.html"/>
        <files mask="structsmart__ptr__delete.html"/>
        <files mask="functions_g.html"/>
        <files mask="functions_func_s.html"/>
        <files mask="classcpptempl_1_1data__map.html"/>
        <files mask="classerpcgen_1_1_erpc_lexer-members.html"/>
        <files mask="classsmart__ptr.html"/>
        <files mask="class_log_1_1_set_output_level-members.html"/>
        <files mask="classcpptempl_1_1_data_list-members.html"/>
        <files mask="classes.html"/>
        <files mask="classcpptempl_1_1_data_int.html"/>
        <files mask="_generator_8h_source.html"/>
        <files mask="_void_type_8h_source.html"/>
        <files mask="functions_func_p.html"/>
        <files mask="classerpcgen_1_1_function-members.html"/>
        <files mask="classerpcgen_1_1_interface-members.html"/>
        <files mask="functions_func_h.html"/>
        <files mask="classerpcgen_1_1_token.html"/>
        <files mask="classerpcgen_1_1_struct_member-members.html"/>
        <files mask="structerpcgen_1_1token__loc__t.html"/>
        <files mask="structsmart__ptr__delete__array.html"/>
        <files mask="classerpcgen_1_1_generator-members.html"/>
        <files mask="classerpcgen_1_1syntax__error2.html"/>
        <files mask="functions_func_o.html"/>
        <files mask="_array_type_8h_source.html"/>
        <files mask="classcpptempl_1_1data__ptr-members.html"/>
        <files mask="tabs.css"/>
        <files mask="_interface_8h_source.html"/>
        <files mask="functions_type.html"/>
        <files mask="functions_func_g.html"/>
        <files mask="_value_8h_source.html"/>
        <files mask="functions_r.html"/>
        <files mask="classerpcgen_1_1_union_type.html"/>
        <files mask="_ast_node_8h_source.html"/>
        <files mask="class_log-members.html"/>
        <files mask="annotated.html"/>
        <files mask="functions_func_c.html"/>
        <files mask="index.html"/>
        <files mask="classerpcgen_1_1_array_type-members.html"/>
        <files mask="functions_d.html"/>
        <files mask="classerpcgen_1_1_group.html"/>
        <files mask="class_value.html"/>
        <files mask="classcpptempl_1_1_data.html"/>
        <files mask="classcpptempl_1_1_data_bool.html"/>
        <files mask="functions_func_l.html"/>
        <files mask="classcpptempl_1_1_data-members.html"/>
        <files mask="_union_case_8h_source.html"/>
        <files mask="_ast_walker_8h_source.html"/>
        <files mask="classerpcgen_1_1internal__error.html"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator-members.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="script">
        <files mask="classerpcgen_1_1_token.js"/>
        <files mask="classcpptempl_1_1_data_value.js"/>
        <files mask="classerpcgen_1_1syntax__error2.js"/>
        <files mask="classerpcgen_1_1_const_type.js"/>
        <files mask="classcpptempl_1_1_data_template.js"/>
        <files mask="classcpptempl_1_1_data_int.js"/>
        <files mask="classerpcgen_1_1erpc__error.js"/>
        <files mask="classerpcgen_1_1_ast_printer.js"/>
        <files mask="classerpcgen_1_1semantic__error.js"/>
        <files mask="classerpcgen_1_1_list_type.js"/>
        <files mask="annotated_dup.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="classerpcgen_1_1_struct_type.js"/>
        <files mask="classcpptempl_1_1_data_bool.js"/>
        <files mask="class_float_value.js"/>
        <files mask="classcpptempl_1_1_template_exception.js"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.js"/>
        <files mask="classerpcgen_1_1_symbol_scope.js"/>
        <files mask="classcpptempl_1_1data__ptr.js"/>
        <files mask="classerpcgen_1_1_erpc_lexer.js"/>
        <files mask="classerpcgen_1_1_function.js"/>
        <files mask="navtreedata.js"/>
        <files mask="classerpcgen_1_1_builtin_type.js"/>
        <files mask="navtree.js"/>
        <files mask="classerpcgen_1_1_group.js"/>
        <files mask="class_opt_argv_iter.js"/>
        <files mask="class_log.js"/>
        <files mask="class_logger.js"/>
        <files mask="structerpcgen_1_1token__loc__t.js"/>
        <files mask="classerpcgen_1_1erpcgen_tool.js"/>
        <files mask="dynsections.js"/>
        <files mask="classcpptempl_1_1data__map.js"/>
        <files mask="classerpcgen_1_1_data_type.js"/>
        <files mask="functions_func.js"/>
        <files mask="class_options.js"/>
        <files mask="classerpcgen_1_1syntax__error.js"/>
        <files mask="classerpcgen_1_1_union_type.js"/>
        <files mask="classerpcgen_1_1lexical__error.js"/>
        <files mask="classcpptempl_1_1_data_map.js"/>
        <files mask="classerpcgen_1_1_function_type.js"/>
        <files mask="classerpcgen_1_1_array_type.js"/>
        <files mask="class_integer_value.js"/>
        <files mask="classerpcgen_1_1_ast_node.js"/>
        <files mask="classerpcgen_1_1_unique_id_checker.js"/>
        <files mask="classerpcgen_1_1internal__error.js"/>
        <files mask="class_value.js"/>
        <files mask="classerpcgen_1_1_alias_type.js"/>
        <files mask="classcpptempl_1_1_data.js"/>
        <files mask="class_option_spec.js"/>
        <files mask="class_string_value.js"/>
        <files mask="class_opt_iter.js"/>
        <files mask="classerpcgen_1_1_function_base.js"/>
        <files mask="classerpcgen_1_1_current_file_info.js"/>
        <files mask="class_path_searcher.js"/>
        <files mask="classerpcgen_1_1_void_type.js"/>
        <files mask="classerpcgen_1_1_annotation.js"/>
        <files mask="class_opt_istream_iter.js"/>
        <files mask="classerpcgen_1_1_program.js"/>
        <files mask="class_opt_iter_rwd.js"/>
        <files mask="resize.js"/>
        <files mask="functions_dup.js"/>
        <files mask="classerpcgen_1_1_enum_member.js"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.js"/>
        <files mask="classsmart__ptr.js"/>
        <files mask="classerpcgen_1_1_generator.js"/>
        <files mask="classerpcgen_1_1_interface.js"/>
        <files mask="classerpcgen_1_1_struct_member.js"/>
        <files mask="class_log_1_1_set_output_level.js"/>
        <files mask="class_stdout_logger.js"/>
        <files mask="classerpcgen_1_1_enum_type.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="classcpptempl_1_1_data_list.js"/>
        <files mask="classerpcgen_1_1_symbol_scanner.js"/>
        <files mask="classerpcgen_1_1_c_generator.js"/>
        <files mask="class_opt_str_tok_iter.js"/>
        <files mask="classerpcgen_1_1_ast_walker.js"/>
        <files mask="classerpcgen_1_1_union_case.js"/>
        <files mask="classerpcgen_1_1_python_generator.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="classerpcgen_1_1_symbol.js"/>
        <files mask="classerpcgen_1_1_interface_definition.js"/>
        <files mask="jquery.js"/>
        <files mask="hierarchy.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="files.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="image">
        <files mask="class_integer_value.png"/>
        <files mask="classerpcgen_1_1_list_type.png"/>
        <files mask="nav_g.png"/>
        <files mask="classerpcgen_1_1_symbol_scanner.png"/>
        <files mask="classerpcgen_1_1_generator.png"/>
        <files mask="classerpcgen_1_1lexical__error.png"/>
        <files mask="classerpcgen_1_1_alias_type.png"/>
        <files mask="classerpcgen_1_1_data_type.png"/>
        <files mask="classerpcgen_1_1_symbol.png"/>
        <files mask="class_string_value.png"/>
        <files mask="classerpcgen_1_1_union_case.png"/>
        <files mask="classerpcgen_1_1_function_type.png"/>
        <files mask="sync_on.png"/>
        <files mask="doxygen.png"/>
        <files mask="closed.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="classcpptempl_1_1_data_map.png"/>
        <files mask="class_opt_str_tok_iter.png"/>
        <files mask="class_opt_istream_iter.png"/>
        <files mask="bc_s.png"/>
        <files mask="tab_b.png"/>
        <files mask="classerpcgen_1_1_python_generator.png"/>
        <files mask="classerpcgen_1_1_erpc_lexer.png"/>
        <files mask="doc.png"/>
        <files mask="open.png"/>
        <files mask="classerpcgen_1_1_struct_member.png"/>
        <files mask="class_value.png"/>
        <files mask="classerpcgen_1_1erpc__error.png"/>
        <files mask="classcpptempl_1_1_data_list.png"/>
        <files mask="classerpcgen_1_1_function_base.png"/>
        <files mask="classerpcgen_1_1_builtin_type.png"/>
        <files mask="sync_off.png"/>
        <files mask="classcpptempl_1_1_data_value.png"/>
        <files mask="class_opt_iter_rwd.png"/>
        <files mask="classerpcgen_1_1_struct_type.png"/>
        <files mask="classerpcgen_1_1_c_generator.png"/>
        <files mask="classcpptempl_1_1_data_int.png"/>
        <files mask="splitbar.png"/>
        <files mask="tab_a.png"/>
        <files mask="classerpcgen_1_1_enum_type.png"/>
        <files mask="classcpptempl_1_1_data.png"/>
        <files mask="tab_h.png"/>
        <files mask="class_stdout_logger.png"/>
        <files mask="classerpcgen_1_1_ast_walker.png"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.png"/>
        <files mask="classerpcgen_1_1syntax__error2.png"/>
        <files mask="classerpcgen_1_1_function.png"/>
        <files mask="classerpcgen_1_1internal__error.png"/>
        <files mask="class_opt_iter.png"/>
        <files mask="classcpptempl_1_1_data_template.png"/>
        <files mask="class_float_value.png"/>
        <files mask="classerpcgen_1_1_const_type.png"/>
        <files mask="classerpcgen_1_1_union_type.png"/>
        <files mask="tab_s.png"/>
        <files mask="classerpcgen_1_1syntax__error.png"/>
        <files mask="classerpcgen_1_1_interface.png"/>
        <files mask="classcpptempl_1_1_template_exception.png"/>
        <files mask="bdwn.png"/>
        <files mask="classerpcgen_1_1_void_type.png"/>
        <files mask="arrowdown.png"/>
        <files mask="classcpptempl_1_1_data_bool.png"/>
        <files mask="class_logger.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_h.png"/>
        <files mask="arrowright.png"/>
        <files mask="folderclosed.png"/>
        <files mask="class_opt_argv_iter.png"/>
        <files mask="classerpcgen_1_1_enum_member.png"/>
        <files mask="classerpcgen_1_1_program.png"/>
        <files mask="classerpcgen_1_1semantic__error.png"/>
        <files mask="folderopen.png"/>
        <files mask="classerpcgen_1_1_array_type.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="doc">
        <files mask="all_3.html"/>
        <files mask="functions_16.html"/>
        <files mask="functions_4.html"/>
        <files mask="all_16.html"/>
        <files mask="classes_d.html"/>
        <files mask="functions_15.html"/>
        <files mask="enumvalues_3.html"/>
        <files mask="functions_b.html"/>
        <files mask="enums_3.html"/>
        <files mask="all_e.html"/>
        <files mask="search.css"/>
        <files mask="all_c.html"/>
        <files mask="variables_0.html"/>
        <files mask="typedefs_0.html"/>
        <files mask="typedefs_5.html"/>
        <files mask="all_14.html"/>
        <files mask="all_6.html"/>
        <files mask="functions_5.html"/>
        <files mask="functions_6.html"/>
        <files mask="functions_10.html"/>
        <files mask="enums_2.html"/>
        <files mask="all_10.html"/>
        <files mask="functions_1.html"/>
        <files mask="enumvalues_1.html"/>
        <files mask="enumvalues_5.html"/>
        <files mask="classes_3.html"/>
        <files mask="all_11.html"/>
        <files mask="classes_0.html"/>
        <files mask="classes_c.html"/>
        <files mask="classes_5.html"/>
        <files mask="functions_c.html"/>
        <files mask="classes_b.html"/>
        <files mask="all_0.html"/>
        <files mask="enumvalues_6.html"/>
        <files mask="functions_9.html"/>
        <files mask="all_19.html"/>
        <files mask="classes_f.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_0.html"/>
        <files mask="classes_9.html"/>
        <files mask="enums_0.html"/>
        <files mask="all_4.html"/>
        <files mask="functions_2.html"/>
        <files mask="all_13.html"/>
        <files mask="variables_1.html"/>
        <files mask="functions_11.html"/>
        <files mask="classes_a.html"/>
        <files mask="all_12.html"/>
        <files mask="functions_3.html"/>
        <files mask="all_f.html"/>
        <files mask="classes_6.html"/>
        <files mask="classes_1.html"/>
        <files mask="functions_17.html"/>
        <files mask="typedefs_4.html"/>
        <files mask="functions_e.html"/>
        <files mask="all_a.html"/>
        <files mask="all_17.html"/>
        <files mask="typedefs_3.html"/>
        <files mask="enumvalues_4.html"/>
        <files mask="all_b.html"/>
        <files mask="typedefs_6.html"/>
        <files mask="functions_f.html"/>
        <files mask="all_7.html"/>
        <files mask="nomatches.html"/>
        <files mask="all_8.html"/>
        <files mask="classes_2.html"/>
        <files mask="all_15.html"/>
        <files mask="all_9.html"/>
        <files mask="functions_14.html"/>
        <files mask="functions_12.html"/>
        <files mask="pages_0.html"/>
        <files mask="enumvalues_7.html"/>
        <files mask="classes_e.html"/>
        <files mask="classes_7.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="enumvalues_2.html"/>
        <files mask="classes_8.html"/>
        <files mask="all_2.html"/>
        <files mask="enums_5.html"/>
        <files mask="enums_4.html"/>
        <files mask="functions_7.html"/>
        <files mask="all_18.html"/>
        <files mask="variables_2.html"/>
        <files mask="functions_8.html"/>
        <files mask="functions_13.html"/>
        <files mask="all_1.html"/>
        <files mask="variables_3.html"/>
        <files mask="typedefs_1.html"/>
        <files mask="functions_d.html"/>
        <files mask="enums_1.html"/>
        <files mask="all_d.html"/>
        <files mask="typedefs_2.html"/>
        <files mask="all_5.html"/>
        <files mask="classes_4.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="script">
        <files mask="functions_15.js"/>
        <files mask="all_12.js"/>
        <files mask="all_a.js"/>
        <files mask="all_3.js"/>
        <files mask="classes_f.js"/>
        <files mask="all_13.js"/>
        <files mask="enumvalues_2.js"/>
        <files mask="enums_3.js"/>
        <files mask="enums_5.js"/>
        <files mask="enums_1.js"/>
        <files mask="classes_6.js"/>
        <files mask="enums_0.js"/>
        <files mask="classes_2.js"/>
        <files mask="classes_1.js"/>
        <files mask="enumvalues_1.js"/>
        <files mask="functions_3.js"/>
        <files mask="functions_1.js"/>
        <files mask="all_c.js"/>
        <files mask="all_15.js"/>
        <files mask="enumvalues_7.js"/>
        <files mask="enumvalues_6.js"/>
        <files mask="all_b.js"/>
        <files mask="classes_8.js"/>
        <files mask="all_19.js"/>
        <files mask="all_17.js"/>
        <files mask="variables_3.js"/>
        <files mask="functions_8.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="all_4.js"/>
        <files mask="functions_11.js"/>
        <files mask="enumvalues_5.js"/>
        <files mask="functions_2.js"/>
        <files mask="functions_f.js"/>
        <files mask="functions_7.js"/>
        <files mask="classes_7.js"/>
        <files mask="all_0.js"/>
        <files mask="variables_2.js"/>
        <files mask="classes_b.js"/>
        <files mask="searchdata.js"/>
        <files mask="functions_e.js"/>
        <files mask="typedefs_5.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="functions_c.js"/>
        <files mask="all_5.js"/>
        <files mask="functions_17.js"/>
        <files mask="enumvalues_4.js"/>
        <files mask="functions_12.js"/>
        <files mask="functions_a.js"/>
        <files mask="all_8.js"/>
        <files mask="typedefs_2.js"/>
        <files mask="typedefs_6.js"/>
        <files mask="all_18.js"/>
        <files mask="all_d.js"/>
        <files mask="classes_d.js"/>
        <files mask="enums_4.js"/>
        <files mask="all_16.js"/>
        <files mask="functions_4.js"/>
        <files mask="functions_b.js"/>
        <files mask="all_7.js"/>
        <files mask="all_11.js"/>
        <files mask="all_10.js"/>
        <files mask="classes_9.js"/>
        <files mask="functions_d.js"/>
        <files mask="classes_4.js"/>
        <files mask="enums_2.js"/>
        <files mask="classes_c.js"/>
        <files mask="classes_5.js"/>
        <files mask="functions_9.js"/>
        <files mask="variables_0.js"/>
        <files mask="functions_10.js"/>
        <files mask="all_14.js"/>
        <files mask="classes_a.js"/>
        <files mask="all_9.js"/>
        <files mask="all_2.js"/>
        <files mask="enumvalues_3.js"/>
        <files mask="typedefs_1.js"/>
        <files mask="functions_13.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="classes_e.js"/>
        <files mask="functions_16.js"/>
        <files mask="typedefs_4.js"/>
        <files mask="all_1.js"/>
        <files mask="typedefs_3.js"/>
        <files mask="all_e.js"/>
        <files mask="functions_6.js"/>
        <files mask="all_6.js"/>
        <files mask="functions_14.js"/>
        <files mask="functions_0.js"/>
        <files mask="classes_3.js"/>
        <files mask="functions_5.js"/>
        <files mask="variables_1.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="image">
        <files mask="search_r.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure" target_path="erpc/doc" type="doc">
        <files mask="index.html"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c" target_path="erpc/doc" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/config" target_path="erpc/aux" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/aux" type="c_include">
        <files mask="erpc_threading.h"/>
        <files mask="erpc_serial.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/aux" type="src">
        <files mask="erpc_threading_pthreads.cpp"/>
        <files mask="erpc_serial.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp"/>
        <files mask="erpc_setup_serial.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp"/>
        <files mask="erpc_serial_transport.cpp"/>
        <files mask="erpc_tcp_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/aux" type="c_include">
        <files mask="erpc_inter_thread_buffer_transport.h"/>
        <files mask="erpc_serial_transport.h"/>
        <files mask="erpc_tcp_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python" target_path="erpc/aux" type="script">
        <files mask="setup.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python" target_path="erpc/aux" type="other">
        <files mask="readme.md"/>
        <files mask="README.rst"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python/erpc" target_path="erpc/aux" type="script">
        <files mask="codec.py"/>
        <files mask="server.py"/>
        <files mask="crc16.py"/>
        <files mask="simple_server.py"/>
        <files mask="erpc_version.py"/>
        <files mask="transport.py"/>
        <files mask="__init__.py"/>
        <files mask="arbitrator.py"/>
        <files mask="basic_codec.py"/>
        <files mask="client.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen" target_path="erpc/aux" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/bin" target_path="erpc/aux" type="script">
        <files mask="txt_to_c.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/embedded-rpc.xcodeproj" target_path="erpc/aux" type="other">
        <files mask="project.pbxproj"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" target_path="erpc/aux" type="other">
        <files mask="contents.xcworkspacedata"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="c_include">
        <files mask="ParseErrors.h"/>
        <files mask="PythonGenerator.h"/>
        <files mask="Token.h"/>
        <files mask="os_config.h"/>
        <files mask="UniqueIdChecker.h"/>
        <files mask="AstNode.h"/>
        <files mask="Logging.h"/>
        <files mask="options.h"/>
        <files mask="format_string.h"/>
        <files mask="ErpcLexer.h"/>
        <files mask="smart_ptr.h"/>
        <files mask="SearchPath.h"/>
        <files mask="HexValues.h"/>
        <files mask="CGenerator.h"/>
        <files mask="annotations.h"/>
        <files mask="AstWalker.h"/>
        <files mask="Value.h"/>
        <files mask="InterfaceDefinition.h"/>
        <files mask="SymbolScanner.h"/>
        <files mask="Generator.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="src">
        <files mask="CGenerator.cpp"/>
        <files mask="InterfaceDefinition.cpp"/>
        <files mask="Generator.cpp"/>
        <files mask="Token.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="PythonGenerator.cpp"/>
        <files mask="ParseErrors.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="AstNode.cpp"/>
        <files mask="SymbolScanner.cpp"/>
        <files mask="ErpcLexer.cpp"/>
        <files mask="options.cpp"/>
        <files mask="AstWalker.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="erpcgen.cpp"/>
        <files mask="UniqueIdChecker.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="other">
        <files mask="erpcgen_lexer.l"/>
        <files mask="erpcgen_parser.y"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="c_include">
        <files mask="cpptempl.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="src">
        <files mask="cpptempl.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="other">
        <files mask="README.rst"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/templates" target_path="erpc/aux" type="other">
        <files mask="py_client.template"/>
        <files mask="py_coders.template"/>
        <files mask="py_common.template"/>
        <files mask="c_client_source.template"/>
        <files mask="py_global_init.template"/>
        <files mask="c_coders.template"/>
        <files mask="py_interface.template"/>
        <files mask="c_server_header.template"/>
        <files mask="py_init.template"/>
        <files mask="c_common_functions.template"/>
        <files mask="c_common_header.template"/>
        <files mask="c_crc.template"/>
        <files mask="py_server.template"/>
        <files mask="c_server_source.template"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/types" target_path="erpc/aux" type="c_include">
        <files mask="BuiltinType.h"/>
        <files mask="EnumMember.h"/>
        <files mask="AliasType.h"/>
        <files mask="ConstType.h"/>
        <files mask="Interface.h"/>
        <files mask="UnionCase.h"/>
        <files mask="StructMember.h"/>
        <files mask="Function.h"/>
        <files mask="ArrayType.h"/>
        <files mask="Symbol.h"/>
        <files mask="FunctionType.h"/>
        <files mask="UnionType.h"/>
        <files mask="Program.h"/>
        <files mask="StructType.h"/>
        <files mask="DataType.h"/>
        <files mask="Annotation.h"/>
        <files mask="ListType.h"/>
        <files mask="EnumType.h"/>
        <files mask="VoidType.h"/>
        <files mask="SymbolScope.h"/>
        <files mask="Group.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/types" target_path="erpc/aux" type="src">
        <files mask="Type.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="other">
        <files mask="erpcgen.sln"/>
        <files mask="erpcgen.vcxproj"/>
        <files mask="erpcgen.vcxproj.filters"/>
        <files mask="erpcgen.vcxproj.user"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="doc">
        <files mask="readme_erpcgen.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="src">
        <files mask="stdafx.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="c_include">
        <files mask="stdafx.h"/>
        <files mask="stdbool.h"/>
        <files mask="targetver.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer" target_path="erpc/aux" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer/src" target_path="erpc/aux" type="c_include">
        <files mask="erpc_config.h"/>
        <files mask="Sniffer.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer/src" target_path="erpc/aux" type="src">
        <files mask="Sniffer.cpp"/>
        <files mask="erpcsniffer.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/mk" target_path="erpc/aux" type="script">
        <files mask="targets.mk"/>
        <files mask="flags.mk"/>
        <files mask="subdirs.mk"/>
        <files mask="common.mk"/>
        <files mask="paths.mk"/>
        <files mask="erpc_common.mk"/>
      </source>
      <source path="middleware/multicore/erpc/utilities" target_path="erpc/aux" type="doc">
        <files mask="README.txt"/>
      </source>
      <source path="middleware/multicore/erpc/utilities/styles" target_path="erpc/aux" type="doc">
        <files mask="README.txt"/>
      </source>
      <source path="middleware/multicore/erpc/utilities/styles/NOTEPADpp" target_path="erpc/aux" type="xml">
        <files mask="template_default.xml"/>
        <files mask="template_deep_black.xml"/>
        <files mask="IDl_deep_black.xml"/>
        <files mask="IDl_default.xml"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Linux_x64" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Linux_x86" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Mac" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Windows" target_path="erpc/aux" type="other">
        <files mask="erpcgen.exe"/>
      </source>
      <source path="middleware/multicore/tools/erpcsniffer/Linux_x64" target_path="erpc/aux" type="other">
        <files mask="erpcsniffer"/>
      </source>
      <source path="middleware/multicore/tools/erpcsniffer/Linux_x86" target_path="erpc/aux" type="other">
        <files mask="erpcsniffer"/>
      </source>
    </component>
    <component id="middleware.multicore.LPC54114" name="multicore" brief="Multicore SDK" version="2.5.0" full_name="Multicore Software Development Kit" devices="LPC54114J256" user_visible="true" type="other">
      <source path="middleware/multicore" target_path="src" type="doc">
        <files mask="readme.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.fatfs.LPC54114" name="fatfs" brief="FatFs" version="0.13.1" revision="0" full_name="FAT File System stack" devices="LPC54114J256" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
        <files mask="integer.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.ram.LPC54114" name="ram" brief="FatFs_RAM" version="0.13" full_name="Fatfs RAM layer" devices="LPC54114J256" dependency="middleware.fatfs.LPC54114" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
    </component>
    <component id="middleware.fatfs.nand.LPC54114" name="nand" brief="FatFs_NAND" version="0.13" full_name="Fatfs NAND layer" devices="LPC54114J256" dependency="middleware.fatfs.LPC54114" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
    </component>
    <component id="middleware.fatfs.unused_files.LPC54114" name="unused_files" brief="fatfs files unused by projects" version="3.9.8" revision="3" devices="LPC54114J256" user_visible="false" type="other">
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="c_include">
        <files mask="ffconf_template.h"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00history.txt"/>
        <files mask="00readme.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00index_e.html"/>
        <files mask="updates.txt"/>
        <files mask="css_e.css"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/doc" target_path="fatfs/fatfs_files" type="doc">
        <files mask="getlabel.html"/>
        <files mask="forward.html"/>
        <files mask="getfree.html"/>
        <files mask="size.html"/>
        <files mask="close.html"/>
        <files mask="tell.html"/>
        <files mask="open.html"/>
        <files mask="error.html"/>
        <files mask="dwrite.html"/>
        <files mask="write.html"/>
        <files mask="closedir.html"/>
        <files mask="mkdir.html"/>
        <files mask="rename.html"/>
        <files mask="mkfs.html"/>
        <files mask="sync.html"/>
        <files mask="unlink.html"/>
        <files mask="lseek.html"/>
        <files mask="printf.html"/>
        <files mask="chdrive.html"/>
        <files mask="sdir.html"/>
        <files mask="chmod.html"/>
        <files mask="filename.html"/>
        <files mask="setlabel.html"/>
        <files mask="sfatfs.html"/>
        <files mask="sfileinfo.html"/>
        <files mask="expand.html"/>
        <files mask="dread.html"/>
        <files mask="setcp.html"/>
        <files mask="gets.html"/>
        <files mask="opendir.html"/>
        <files mask="rc.html"/>
        <files mask="stat.html"/>
        <files mask="findfirst.html"/>
        <files mask="fattime.html"/>
        <files mask="readdir.html"/>
        <files mask="fdisk.html"/>
        <files mask="sfile.html"/>
        <files mask="mount.html"/>
        <files mask="dinit.html"/>
        <files mask="config.html"/>
        <files mask="findnext.html"/>
        <files mask="dioctl.html"/>
        <files mask="eof.html"/>
        <files mask="chdir.html"/>
        <files mask="putc.html"/>
        <files mask="puts.html"/>
        <files mask="dstat.html"/>
        <files mask="getcwd.html"/>
        <files mask="appnote.html"/>
        <files mask="truncate.html"/>
        <files mask="read.html"/>
        <files mask="utime.html"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="image">
        <files mask="f4.png"/>
        <files mask="layers3.png"/>
        <files mask="funcs.png"/>
        <files mask="rwtest1.png"/>
        <files mask="rwtest3.png"/>
        <files mask="f1.png"/>
        <files mask="f6.png"/>
        <files mask="layers1.png"/>
        <files mask="layers2.png"/>
        <files mask="modules.png"/>
        <files mask="rwtest2.png"/>
        <files mask="layers.png"/>
        <files mask="f2.png"/>
        <files mask="f7.png"/>
        <files mask="f3.png"/>
        <files mask="f5.png"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="doc">
        <files mask="mkfs.xls"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="archive">
        <files mask="mkfatimg.zip"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="src">
        <files mask="app1.c"/>
        <files mask="app4.c"/>
        <files mask="app5.c"/>
        <files mask="app3.c"/>
        <files mask="app2.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_cmsis.LPC54114" name="spi_cmsis" brief="SPI CMSIS Driver" version="2.0.0" devices="LPC54114J256" dependency="RTE_Device.LPC54114 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_spi.LPC54114 platform.drivers.flexcomm_spi_dma.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_cmsis.LPC54114" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" devices="LPC54114J256" dependency="RTE_Device.LPC54114 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_i2c.LPC54114 platform.drivers.flexcomm_i2c_dma.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_cmsis.LPC54114" name="usart_cmsis" brief="USART CMSIS Driver" version="2.0.0" devices="LPC54114J256" dependency="RTE_Device.LPC54114 platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114 platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.flexcomm_usart_dma.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="CMSIS_driver">
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart_cmsis.h"/>
      </source>
      <source path="devices/LPC54114/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_usart_cmsis.c"/>
      </source>
    </component>
    <component id="platform.drivers.dmic_hwvad.LPC54114" name="dmic" brief="DMIC Driver" version="2.0.0" full_name="DMIC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.dmic.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmic_dma.LPC54114" name="dmic_dma" brief="DMIC Driver" version="2.0.0" full_name="DMIC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.dmic.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_dma.LPC54114" name="dma" brief="DMA Driver" version="2.0.0" full_name="DMA Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.gint.LPC54114" name="gint" brief="GINT Driver" version="2.0.1" full_name="GINT Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gint.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_gint.c"/>
      </source>
    </component>
    <component id="platform.drivers.pint.LPC54114" name="pint" brief="PINT Driver" version="2.0.3" full_name="PINT Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_pint.c"/>
      </source>
    </component>
    <component id="platform.drivers.dmic.LPC54114" name="dmic" brief="DMIC Driver" version="2.0.1" full_name="DMIC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
    </component>
    <component id="platform.drivers.utick.LPC54114" name="utick" brief="UTICK Driver" version="2.0.1" full_name="UTICK Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_utick.c"/>
      </source>
    </component>
    <component id="platform.drivers.inputmux_connections.LPC54114" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.1" full_name="Inputmux_connections Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
    </component>
    <component id="platform.drivers.inputmux.LPC54114" name="inputmux" brief="INPUTMUX Driver" version="2.0.0" full_name="INPUTMUX Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.inputmux_connections.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
    </component>
    <component id="platform.drivers.mrt.LPC54114" name="mrt" brief="MRT Driver" version="2.0.1" full_name="MRT Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
    </component>
    <component id="platform.drivers.wwdt.LPC54114" name="wwdt" brief="WWDT Driver" version="2.1.0" full_name="WWDT Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
    </component>
    <component id="platform.drivers.sctimer.LPC54114" name="sctimer" brief="SCT Driver" version="2.0.1" full_name="SCT Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_rtc.LPC54114" name="lpc_rtc" brief="RTC Driver" version="2.0.0" full_name="RTC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_freertos.LPC54114" name="spi_freertos" brief="SPI Driver" version="2.0.2" full_name="FLEXCOMM SPI FREERTOS Driver" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_spi.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.LPC54114" name="spi_dma" brief="SPI Driver" version="2.0.3" full_name="FLEXCOMM SPI DMA Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_spi.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_spi.LPC54114" name="spi" brief="SPI Driver" version="2.0.3" full_name="FLEXCOMM SPI Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
    </component>
    <component id="platform.drivers.fmeas.LPC54114" name="fmeas" brief="FMEAS Driver" version="2.0.0" full_name="FMEAS Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
    </component>
    <component id="platform.drivers.ctimer.LPC54114" name="ctimer" brief="CTimer Driver" version="2.0.2" full_name="CTimer Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_crc.LPC54114" name="lpc_crc" brief="CRC Driver" version="2.0.1" full_name="CRC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_crc.c"/>
      </source>
    </component>
    <component id="platform.drivers.flashiap.LPC54114" name="flashiap" brief="FLASHIAP Driver" version="2.0.0" full_name="FLASHIAP Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flashiap.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_flashiap.c"/>
      </source>
    </component>
    <component id="platform.drivers.iap.LPC54114" name="iap" brief="IAP Driver" version="2.0.2" full_name="IAP Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_iap.c"/>
      </source>
    </component>
    <component id="platform.drivers.mailbox.LPC54114" name="mailbox" brief="MAILBOX Driver" version="2.0.0" full_name="MAILBOX Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mailbox.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_iocon.LPC54114" name="iocon" brief="IOCON Driver" version="2.0.0" full_name="IOCON Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iocon.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_gpio.LPC54114" name="gpio" brief="GPIO Driver" version="2.1.2" full_name="GPIO Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
    </component>
    <component id="platform.drivers.lpc_adc.LPC54114" name="adc" brief="ADC Driver" version="2.2.0" full_name="ADC Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.LPC54114" name="flexcomm_i2s_dma" brief="I2S Driver" version="2.0.1" full_name="FLEXCOMM I2S DMA Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_i2s.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2s.LPC54114" name="flexcomm_i2s" brief="I2S Driver" version="2.0.2" full_name="FLEXCOMM I2S Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_freertos.LPC54114" name="i2c_freertos" brief="I2C Driver" version="2.0.3" full_name="FLEXCOMM I2C FREERTOS Driver" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_i2c.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.LPC54114" name="i2c_dma" brief="I2C Driver" version="2.0.3" full_name="FLEXCOMM I2C DMA Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_i2c.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_i2c.LPC54114" name="i2c" brief="I2C Driver" version="2.0.3" full_name="FLEXCOMM I2C Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm.LPC54114" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.0" full_name="FLEXCOMM Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_freertos.LPC54114" name="usart_freertos" brief="USART Driver" version="2.0.1" full_name="FLEXCOMM USART FREERTOS Driver" devices="LPC54114J256" dependency="middleware.freertos.LPC54114 middleware.template_application.freertos.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_usart_freertos.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_usart_freertos.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.LPC54114" name="usart_dma" brief="USART Driver" version="2.0.1" full_name="FLEXCOMM USART DMA Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.lpc_dma.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexcomm_usart.LPC54114" name="usart" brief="USART Driver" version="2.0.3" full_name="FLEXCOMM USART Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_usart.c"/>
      </source>
    </component>
    <component id="platform.drivers.reset.LPC54114" name="reset" brief="Reset Driver" version="2.0.1" full_name="Reset Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.power.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_reset.c"/>
      </source>
    </component>
    <component id="platform.drivers.common.LPC54114" name="common" brief="COMMON Driver" version="2.0.1" full_name="COMMON Driver" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114" user_visible="true" type="driver">
      <source path="devices/LPC54114/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source path="devices/LPC54114/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
    </component>
    <component id="project_template.LPC54114.LPC54114" name="LPC54114" version="1.0.0" devices="LPC54114J256" dependency="component.serial_manager.LPC54114 component.serial_manager_uart.LPC54114 component.usart_adapter.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.devices.LPC54114_startup.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.lpc_gpio.LPC54114 platform.drivers.lpc_iocon.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114 utility.debug_console.LPC54114" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/LPC54114/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source path="devices/LPC54114/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
    </component>
    <component id="project_template.lpcxpresso54114.LPC54114" name="lpcxpresso54114" version="1.0.0" devices="LPC54114J256" dependency="component.serial_manager.LPC54114 component.serial_manager_uart.LPC54114 component.usart_adapter.LPC54114 platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114 platform.devices.LPC54114_CMSIS.LPC54114 platform.devices.LPC54114_startup.LPC54114 platform.drivers.clock.LPC54114 platform.drivers.common.LPC54114 platform.drivers.flexcomm.LPC54114 platform.drivers.flexcomm_usart.LPC54114 platform.drivers.lpc_gpio.LPC54114 platform.drivers.lpc_iocon.LPC54114 platform.drivers.power.LPC54114 platform.drivers.reset.LPC54114 utility.debug_console.LPC54114" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/lpcxpresso54114/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source path="boards/lpcxpresso54114/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_debugger.LPC54114" name="LPC54114_debugger" version="1.0.0" devices="LPC54114J256" user_visible="true" type="debugger">
      <source path="devices/LPC54114" target_path="src" type="xml" device_cores="cm0plus_LPC54114J256">
        <files mask="LPC54114_cm0plus.xml"/>
      </source>
      <source path="devices/LPC54114" target_path="src" type="xml" device_cores="cm4_LPC54114J256">
        <files mask="LPC54114_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_startup.LPC54114" name="LPC54114_startup" version="1.0.0" devices="LPC54114J256" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="startup" type="src_c">
        <files mask="startup_lpc5411x.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="startup" type="src_cpp">
        <files mask="startup_lpc5411x.cpp"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="startup" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="startup" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_linker.LPC54114" name="LPC54114_linker" version="1.0.0" devices="LPC54114J256" user_visible="true" type="linker"/>
    <component id="platform.devices.LPC54114_CMSIS.LPC54114" name="LPC54114_CMSIS" version="1.0.0" devices="LPC54114J256" dependency="platform.Include_common.LPC54114 platform.Include_core_cm0plus.LPC54114 platform.Include_core_cm4.LPC54114" user_visible="true" type="CMSIS_Include">
      <source path="devices/LPC54114" target_path="device" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source path="devices/LPC54114" target_path="device" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="LPC54114_cm0plus.h"/>
        <files mask="LPC54114_cm0plus_features.h"/>
        <files mask="system_LPC54114_cm0plus.h"/>
      </source>
      <source path="devices/LPC54114" target_path="device" type="src" device_cores="cm0plus_LPC54114J256">
        <files mask="system_LPC54114_cm0plus.c"/>
      </source>
      <source path="devices/LPC54114" target_path="device" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="LPC54114_cm4.h"/>
        <files mask="LPC54114_cm4_features.h"/>
        <files mask="system_LPC54114_cm4.h"/>
      </source>
      <source path="devices/LPC54114" target_path="device" type="src" device_cores="cm4_LPC54114J256">
        <files mask="system_LPC54114_cm4.c"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_flash.LPC54114" name="LPC54114_flash" version="1.0.0" devices="LPC54114J256" user_visible="true" type="debugger">
      <source toolchain="mcuxpresso" path="devices/LPC54114/mcuxpresso" target_path="src" type="binary">
        <files mask="LPC5411x_256K.cfx"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
